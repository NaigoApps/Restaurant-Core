{"version":3,"sources":["ApplicationContext.js","widgets/Row.jsx","widgets/Column.jsx","utils/useRemote.js","utils/Utils.js","widgets/Icon.jsx","widgets/Button.jsx","widgets/ButtonGroup.jsx","widgets/ColumnSpace.jsx","inputs/SelectInput.jsx","utils/useNetwork.js","inputs/BooleanInput.jsx","utils/useCurrency.js","widgets/Modal.jsx","widgets/IntKeyPad.jsx","widgets/KeyPad.jsx","inputs/FloatInput.jsx","inputs/FloatEditor.jsx","inputs/Keyboard.jsx","inputs/TextInput.jsx","inputs/TextEditor.jsx","widgets/OkCancelDialog.jsx","widgets/ConfirmButton.jsx","pages/configuration/additions/AdditionEditor.jsx","widgets/Wrap.jsx","pages/configuration/additions/AdditionsConfigurationPage.jsx","widgets/RoundButton.jsx","pages/configuration/ConfigurationHomePage.jsx","pages/configuration/ConfigurationPage.jsx","pages/configuration/menu/CategoriesConfigurationSection.jsx","inputs/SelectEditor.jsx","inputs/ColorInput.jsx","inputs/RemoteSelectEditor.jsx","pages/configuration/menu/DishEditor.jsx","pages/configuration/menu/CategoryEditor.jsx","pages/configuration/menu/MenuConfigurationPage.jsx","pages/configuration/printers/LocationEditor.jsx","pages/configuration/printers/LocationsConfigurationSection.jsx","inputs/IntegerInput.jsx","inputs/IntegerEditor.jsx","pages/configuration/printers/PrinterEditor.jsx","pages/configuration/printers/PrintersConfigurationSection.jsx","pages/configuration/printers/PrintersConfigurationPage.jsx","pages/configuration/tables/TableEditor.jsx","pages/configuration/tables/TablesConfigurationPage.jsx","pages/configuration/waiters/WaiterEditor.jsx","pages/configuration/waiters/WaitersConfigurationPage.jsx","widgets/Editor.jsx","pages/evenings/tables/DiningTableDataEditor.jsx","utils/useEditor.js","pages/evenings/DiningTablesListPage.jsx","pages/evenings/EveningPage.jsx","widgets/Calendar.jsx","pages/evenings/EveningSelectionPage.jsx","pages/evenings/EveningsPage.jsx","inputs/RemoteSelectInput.jsx","utils/useInterval.js","widgets/Scrollable.jsx","pages/evenings/tables/bills/editor/SplitModule.jsx","pages/evenings/tables/bills/editor/BillSplitPage.jsx","pages/evenings/tables/bills/editor/BillReviewPage.jsx","pages/evenings/tables/bills/editor/BillEditor.jsx","utils/OrdinationUtils.js","pages/evenings/tables/ordinations/AdvancedInsertingSection.jsx","pages/evenings/tables/ordinations/OrdinationDish.jsx","pages/evenings/tables/ordinations/OrdinationDishes.jsx","pages/evenings/tables/ordinations/InsertingSection.jsx","pages/evenings/tables/ordinations/OrdinationReview.jsx","pages/evenings/tables/ordinations/OrdinationEditor.jsx","pages/evenings/tables/mode.js","widgets/Alert.jsx","pages/evenings/tables/bills/editor/PriceFiller.jsx","widgets/OptionsDialog.jsx","pages/evenings/tables/DiningTableActions.jsx","widgets/Group.jsx","pages/evenings/tables/DiningTableReview.jsx","pages/evenings/tables/ordinations/DiningTableOrdinations.jsx","widgets/OptionsButton.jsx","widgets/YesNoButton.jsx","pages/evenings/tables/bills/DiningTableBill.jsx","pages/evenings/tables/bills/DiningTableBills.jsx","pages/evenings/tables/DiningTablePage.jsx","pages/home/HomePage.jsx","widgets/Loading.jsx","pages/home/FiscalPrinter.jsx","navs/DefaultNav.jsx","navs/CategoryNav.jsx","navs/DiningTablePageNav.jsx","navs/DishNav.jsx","navs/EveningPageNav.jsx","navs/EveningsPageNav.jsx","navs/HomePageNav.jsx","pages/NavContent.jsx","pages/Main.jsx","pages/NotFound.jsx","pages/settings/BaseSettings.jsx","pages/settings/HydraSettings.jsx","pages/settings/SettingsPage.jsx","widgets/DateInput.jsx","pages/statistics/StatisticsPage.jsx","pages/configuration/customers/CustomerEditor.jsx","pages/configuration/customers/CustomersConfigurationPage.jsx","serviceWorker.js","index.js","App.jsx"],"names":["AppContext","React","createContext","Row","_ref","children","spaced","grow","margin","relative","wrap","grid","alignCenter","justifyCenter","justifyBetween","justifyAround","react_default","a","createElement","className","classNames","is-flex-grow-1","is-justify-content-center","is-justify-content-space-between","is-justify-content-space-around","is-align-items-center","m-1","m-2","spaced-row","is-relative","is-flex-wrap-wrap","is-flex-basis-0","Column","justifyStretch","is-justify-content-stretch","spaced-column","appUrl","getOrDefault","value","defaultValue","undefined","useRemote","resource","config","_useContext","useContext","notifyError","startLoading","stopLoading","_useState","useState","default","_useState2","Object","slicedToArray","data","setData","refresh","useCallback","asyncToGenerator","regenerator_default","mark","_callee","response","_context","prev","next","Axios","get","sent","t0","console","log","stop","autoLoad","auto","useEffect","beautifyTime","strDate","substr","indexOf","distribute","array","result","partition","forEach","element","length","push","randomUuid","concat","Math","random","toString","slice","isToday","date","now","Date","getDate","getMonth","getFullYear","formatPrice","price","toFixed","formatGroup","group","options","arguments","withName","withQuantity","components","quantity","dish","name","apply","toConsumableArray","additions","map","notes","join","formatDiningTable","dt","table","waiter","openingTime","formatDiningTableBg","status","Icon","react_fontawesome_index_es","icon","SIZES","XXSMALL","XSMALL","SMALL","MEDIUM","HUGE","SPACE","Button","bg","large","size","text","kind","invisible","active","disabled","onClick","loading","setLoading","iconComponent","_handleClick","this","react","type","is-large","xxs","xs","sm","md","lg","space","is-loading","onMouseUp","ButtonGroup","ColumnSpace","others","esm_extends","SelectInput","id","_ref$bg","rows","cols","multiSelect","alwaysShowPages","onSelectOption","page","setPage","optionsList","rs","cs","currentPage","min","pageButtons","groups","btns","index","key","buildPageButtons","row","rowIndex","buttons","option","v","color","find","val","headers","Content-Type","useNetwork","remoteCall","call","abrupt","_x","res","put","post","remove","delete","BooleanInput","label","onConfirm","faTimes","faCheck","useCurrency","Modal","visible","onClose","is-medium","aria-label","BUTTONS","CANC","IntKeyPad","onChar","n1","n","n2","KeyPad","n3","n4","FloatInput","placeholder","onChange","hit","currency","setText","updateValue","txt","wrapped","numeral","isNaN","format","newValue","char","newText","FloatEditor","initialValue","objectWithoutProperties","setValue","_useState3","_useState4","shown","setShown","_useState5","_useState6","setHit","formattedValue","hide","assign","highPadding","NUMBERS","UPPERCASE","LOWERCASE","BACKSPACE","LEFT","RIGHT","DELETE","Keyboard","uppercase","setUppercase","onButtonClick","letters","numbers","letters1","letters2","letters3","faLock","upper","faAngleLeft","faAngleRight","TextInput","password","caret","setCaret","onCharImpl","oldText","toUpperCase","c","evt","inputType","textInput","$","setTimeout","setSelectionRange","focus","input","selectionStart","onKeyDown","nativeEvent","TextEditor","_ref$kind","OkCancelDialog","onCancel","onOk","okText","cancelText","ConfirmButton","confirmMessage","dialogVisible","setDialogVisible","AdditionEditor","additionUuid","addition","refreshAll","_useNetwork","_useRemote","_useRemote2","refreshThis","updateProperty","_x2","_updateProperty","_deleteAddition","_callee2","_context2","generic","falseLabel","trueLabel","faTrash","Wrap","AdditionsConfigurationPage","selected","setSelected","_createAddition","uuid","faPlus","RoundButton","classes","getClassName","hCenter","vCenter","ConfigurationHomePage","navigate","faTable","screenfull","request","vertical","fill","faCarrot","faPeopleCarry","faPrint","faUser","ConfigurationPage","CategoriesConfigurationSection","categories","_createCategory","cat","SelectEditor","valueObject","_ref$id","_ref$text","maxChars","valueId","fullSize","limit","substring","opt","findOption","ColorInput","RemoteSelectEditor","url","DishEditor","dishUuid","_updateCategory","_deleteDish","_callee3","_context3","description","categoryId","_x3","updateCategory","CategoryEditor","categoryUuid","category","selectedDish","setSelectedDish","_deleteCategory","_createDish","location","l","ad","findIndex","splice","dishes","d","MenuConfigurationPage","LocationEditor","locationUuid","_deleteLocation","p","printer","LocationsConfigurationSection","locations","_createLocation","IntegerInput","parseInt","target","IntegerEditor","PrinterEditor","printerUuid","_deletePrinter","address","port","lineCharacters","PrintersConfigurationSection","printers","_createPrinter","PrintersConfigurationPage","TableEditor","tableUuid","_deleteTable","TablesConfigurationPage","tables","_createTable","WaiterEditor","waiterUuid","_deleteWaiter","surname","cf","WaitersConfigurationPage","waiters","_createWaiter","w","Editor","initialData","DiningTableDataEditor","_useEditor","entity","setEntity","confirm","loadedEntity","useEditor","_useEditor2","setTable","_onOk","coverCharges","objectSpread","t","busy","DiningTablesListPage","eveningDate","evening","editing","setEditing","updateCoverCharge","_ref2","sock","SockJS","client","Stomp","over","connect","subscribe","disconnect","diningTables","filter","coverCharge","EveningPage","topSpaced","MONTHS","Calendar","initialDate","month","setMonth","year","setYear","current","getDay","setDate","dates","m","i","max","getTime","EveningSelectionPage","moment","EveningsPage","RemoteSelectInput","useInterval","callback","delay","savedCallback","useRef","setInterval","clearInterval","require","Scrollable","percent","setPercent","scrollbarNeeded","setScrollbarNeeded","adjustPercent","updateScrollbar","height","parentHeight","parent","updateComponents","child","dot","css","faAngleUp","faAngleDown","SplitModule","items","f","ff","fff","b","bb","bbb","display","item","faStepBackward","faCaretLeft","faCaretRight","faStepForward","faFastBackward","faFastForward","BillSplitPage","selectedCcs","setSelectedCcs","availableCcs","availableOrders","setAvailableOrders","editCoverCharges","old","_openAll","oldGroups","editGroup","oldOrders","g","reduce","p1","p2","BillReviewPage","finalTotal","setFinalTotal","bills","setBills","_updateBillsNumber","newStringTotal","newTotal","estimatedTotal","o1","o2","grp","BillEditor","review","setReview","setAvailableCcs","_useState7","_useState8","_useState9","_useState10","_onConfirm","ccs","orders","order","a1","a2","total","then","remainingTable","cloneDeep","tableOrdersTotal","clone","ordination","AdvancedInsertingSection","setQuantity","setPrice","setNotes","setAdditions","availableAdditions","OrdinationDish","onSelect","onCustomize","onLess","onMore","phaseGroup","pIndex","gIndex","phase","phaseIndex","groupIndex","dishOrders","faEllipsisH","faMinus","OrdinationDishes","onSelectDish","search","setSearch","filteredDishes","toLowerCase","includes","InsertingSection","onSelectCategory","onSelectPhase","onSelectQuantity","phases","onDeselect","OrdinationReview","OrdinationEditor","_ref$initialOrdinatio","initialOrdination","setOrdination","insertingCategory","setInsertingCategory","insertingPhase","setInsertingPhase","addDish","oldOrdination","newOrdination","targetOrdination","pI","o","g2","g1","every","gI","sort","priority","doAddGroup","qty","adds","MODE","REVIEW","ORDINATIONS","BILLS","Alert","PriceFiller","onDone","_updatePrice","updatePrice","OptionsDialog","DiningTableActions","setMode","selectingParts","setSelectingParts","selectedParts","setSelectedParts","selectedPrice","setSelectedPrice","choosingBill","setChoosingBill","closing","setClosing","_useState11","_useState12","archiving","setArchiving","_useState13","_useState14","creating","setCreating","_useState15","_useState16","merging","setMerging","_useState17","_useState18","_useState19","_useState20","creatingBill","setCreatingBill","_useState21","_useState22","fixingPrices","setFixingPrices","_makeQuickBill","_makePartialBill","_useState23","_useState24","mergeDestination","setMergeDestination","_mergeTables","_closeTable","_callee4","_context4","_archiveTable","_callee5","_context5","_callee6","_context6","_exportTable","_callee7","_context7","fileDownload","JSON","stringify","faDollarSign","faPen","faFileExport","exportTable","faHandshake","faArchive","deleteTable","makeQuickBill","makePartialBill","coverChargesPrice","parseFloat","chooseParts","Group","is-blink","DiningTableReview","settings","DiningTableOrdinations","selectedOrdination","setSelectedOrdination","menuOrdination","setMenuOrdination","printOrdination","_printOrdination","_abortOrdination","_deleteOrdination","ordinations","creationTime","dirty","faBars","abortOrdination","deleteOrdination","OptionsButton","message","YesNoButton","yesText","noText","onYes","onNo","DiningTableBill","bill","menuBill","setMenuBill","printPreBill","_printPreBill","printBill","_printBill","deleteBill","_deleteBill","_deleteBillAndOrders","prog","progressive","printTime","customer","formatBill","updatedBill","DiningTableBills","bitSpaced","DiningTablePage","mode","HomePage","faCalendar","faCogs","faBolt","Loading","FiscalPrinter","_feed","_open","entry","DefaultNav","uri","pathname","CategoryNav","DiningTablePageNav","DishNav","EveningPageNav","EveningsPageNav","HomePageNav","NavContent","es","primary","path","Main","showPrinterDialog","setShowPrinterDialog","showCashPassword","setShowCashPassword","cashPassword","setCashPassword","_openCash","role","faLockOpen","faExpand","faCompress","exit","error","clearError","NotFound","BaseSettings","updateSetting","_updateSetting","_deleteHeader","newHeaders","updateHeader","_x4","_x5","_updateHeader","billHeader","split","mainPrinter","shrinkOrdinations","header","deleteHeader","HydraSettings","printerModalVisible","setPrinterModalVisible","_testPrint","fiscalPrinterAddress","fiscalPrinterPort","SettingsPage","DateInput","onDateChange","days","daysInMonth","Stats","StatisticsPage","add","from","setFrom","to","setTo","setOption","entries","stats","setStats","_useRemote3","printCategories","_useRemote5","printDishes","randomColor","floor","PieChart","width","Pie","isAnimationActive","nameKey","dataKey","cx","cy","midAngle","innerRadius","outerRadius","RADIAN","PI","radius","x","cos","y","sin","textAnchor","dominantBaseline","Legend","CustomerEditor","customerUuid","_deleteCustomer","piva","city","cap","district","CustomersConfigurationPage","customers","_createCustomer","Boolean","window","hostname","match","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","symbol","locale","ReactDOM","render","setError","diningTable","setDiningTable","ApplicationContext","Provider","err","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0987d9e.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppContext = React.createContext(null);\n\nexport default AppContext;\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport default function Row({\n  children,\n  spaced,\n  grow,\n  margin,\n  relative,\n  wrap,\n  grid,\n  alignCenter,\n  justifyCenter,\n  justifyBetween,\n  justifyAround,\n}) {\n  return (\n    <div className={classNames('is-flex', 'is-flex-direction-row', {\n      'is-flex-grow-1': grow,\n      'is-justify-content-center': justifyCenter,\n      'is-justify-content-space-between': justifyBetween,\n      'is-justify-content-space-around': justifyAround,\n      'is-align-items-center': alignCenter,\n      'm-1': margin === 'small',\n      'm-2': margin === 'medium',\n      'spaced-row': spaced,\n      'is-relative': relative,\n      'is-flex-wrap-wrap': wrap,\n      'is-flex-basis-0': grid\n    })}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport default function Column({\n  spaced,\n  grow,\n  margin,\n  relative,\n  wrap,\n  grid,\n  justifyCenter,\n  justifyStretch,\n  alignCenter,\n  children,\n}) {\n  return (\n    <div className={classNames('is-flex', 'is-flex-direction-column', {\n      'is-flex-grow-1': grow,\n      'is-justify-content-center': justifyCenter,\n      'is-justify-content-stretch': justifyStretch,\n      'is-align-items-center': alignCenter,\n      'm-1': margin === 'small',\n      'm-2': margin === 'medium',\n      'is-relative': relative,\n      'is-flex-wrap-wrap': wrap,\n      'is-flex-basis-0': grid,\n      'spaced-column': spaced,\n    })}\n    >\n      {children}\n    </div>\n  );\n}\n","import Axios from 'axios';\nimport {\n  useCallback, useContext, useEffect, useState,\n} from 'react';\nimport AppContext from '../ApplicationContext';\n\nexport const appUrl = '/rest/';\n\nfunction getOrDefault(value, defaultValue) {\n  return value !== undefined ? value : defaultValue;\n}\n\nexport function url(res) {\n  return appUrl + res;\n}\n\nexport default function (resource, config) {\n  const { notifyError, startLoading, stopLoading } = useContext(AppContext);\n\n  const [data, setData] = useState(\n    config ? getOrDefault(config.default, null) : null,\n  );\n\n  const refresh = useCallback(async () => {\n    try {\n      startLoading();\n      const response = await Axios.get(appUrl + resource);\n      setData(response.data);\n      stopLoading();\n    } catch (err) {\n      stopLoading();\n      if (err.response && err.response.data) {\n        console.log('Error data', err.response);\n        notifyError(err.response.data);\n      } else {\n        notifyError('Errore sconosciuto');\n      }\n    }\n  }, [notifyError, resource, startLoading, stopLoading]);\n\n  const autoLoad = !config || getOrDefault(config.auto, true);\n\n  useEffect(() => {\n    if (resource && autoLoad) {\n      refresh();\n    }\n  }, [autoLoad, refresh, resource]);\n\n  return [data, refresh];\n}\n","export function beautifyDate(strDate) {\n  if (strDate) {\n    return `${strDate.substr(8, 2)}/${strDate.substr(5, 2)}/${strDate.substr(0, 4)}`;\n  }\n  return '';\n}\n\nexport function beautifyTime(strDate) {\n  if (strDate) {\n    return strDate.substr(strDate.indexOf('T') + 1, 5);\n  }\n  return '';\n}\n\nexport function stringEquals(s1, s2) {\n  if ((s1 && !s2) || (s2 && !s1)) {\n    return false;\n  }\n  if (!s1 && !s2) {\n    return true;\n  }\n  return s1.localeCompare(s2) === 0;\n}\n\nexport function numberCompare(n1, n2) {\n  if (n1 < n2) return -1;\n  if (n1 > n2) return +1;\n  return 0;\n}\n\nexport function findByUuid(array, uuid) {\n  return array.find(e => e.get('uuid') === uuid);\n}\n\nexport function findIndexByUuid(array, uuid) {\n  return array.findIndex(e => e.get('uuid') === uuid);\n}\n\nexport function collectionsEquals(l1, l2) {\n  if (l1 === l2 || (l1 && !l2) || (l2 && !l1)) {\n    return false;\n  }\n  if (l1.length !== l2.length) {\n    return false;\n  }\n  let ok = true;\n  l1.forEach((element) => {\n    ok = ok && l2.includes(element);\n  });\n  l2.forEach((element) => {\n    ok = ok && l1.includes(element);\n  });\n  return ok;\n}\n\nexport function distribute(array, value) {\n  const result = [];\n  let partition = [];\n  if (array) {\n    array.forEach((element) => {\n      if (partition.length >= value) {\n        result.push(partition);\n        partition = [];\n      }\n      partition.push(element);\n    });\n    if (partition.length > 0) {\n      result.push(partition);\n    }\n  }\n  return result;\n}\n\nexport function randomUuid() {\n  return `UI_${Math.random()\n    .toString(16)\n    .slice(2)}`;\n}\n\nexport function isToday(date) {\n  const now = new Date();\n  return (\n    date.getDate() === now.getDate()\n    && date.getMonth() === now.getMonth()\n    && date.getFullYear() === now.getFullYear()\n  );\n}\n\nexport function isThisMonth(date) {\n  const now = new Date();\n  return date.getMonth() === now.getMonth() && date.getFullYear() === now.getFullYear();\n}\n\nexport function formatPrice(price) {\n  return `€${price.toFixed(2)}`;\n}\n\nexport function formatGroup(group, options = {\n  withName: true,\n  withQuantity: true,\n}) {\n  const components = [];\n  if (options.withQuantity) {\n    components.push(group.quantity);\n  }\n  if (options.withName && group.dish) {\n    components.push(group.dish.name);\n  }\n  components.push(...group.additions.map(a => a.name));\n  if (group.notes) {\n    components.push(group.notes);\n  }\n  return components.join(' ');\n}\n\nexport function formatDiningTable(dt) {\n  if (!dt) {\n    return '?';\n  }\n  const table = dt.table ? dt.table.name : '?';\n  const waiter = dt.waiter ? dt.waiter.name : '?';\n  return `${table} ${waiter} (${beautifyTime(dt.openingTime)})`;\n}\n\nexport function formatDiningTableBg(dt) {\n  if (dt.status === 'OPEN') {\n    return 'danger';\n  }\n  if (dt.status === 'CLOSING') {\n    return 'warning';\n  }\n  return 'secondary';\n}\n\nexport function getMonths() {\n  return [\n    'Gennaio', 'Febbraio', 'Marzo',\n    'Aprile', 'Maggio', 'Giugno',\n    'Luglio', 'Agosto', 'Settembre',\n    'Ottobre', 'Novembre', 'Dicembre',\n  ];\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function ({ name }) {\n  return <FontAwesomeIcon icon={name} />;\n}\n","import classNames from 'classnames';\nimport React, { Fragment, useState } from 'react';\nimport Icon from './Icon';\n\nexport const SIZES = {\n  XXSMALL: 'xxs',\n  XSMALL: 'xs',\n  SMALL: 'sm',\n  MEDIUM: 'md',\n  HUGE: 'lg',\n  SPACE: 'space',\n};\n\nexport default function Button({\n  icon,\n  large,\n  size,\n  text,\n  kind,\n  invisible,\n  active,\n  disabled,\n  onClick,\n}) {\n  const [loading, setLoading] = useState(false);\n\n  let iconComponent = null;\n  if (icon) {\n    iconComponent = <Icon name={icon} />;\n  }\n\n  let bg;\n  if (invisible) {\n    bg = 'invisible';\n  } else if (active) {\n    bg = 'primary';\n  } else {\n    bg = kind || 'secondary';\n  }\n\n\n  async function handleClick() {\n    setLoading(true);\n    try {\n      await onClick();\n    } catch (err) {\n      setLoading(false);\n      throw err;\n    }\n    setLoading(false);\n  }\n\n  return (\n    <Fragment>\n      <button\n        type=\"button\"\n        className={classNames(`button is-${bg} has-background-${bg}`, {\n          'is-large': large,\n          xxs: size === SIZES.XXSMALL,\n          xs: size === SIZES.XSMALL,\n          sm: size === SIZES.SMALL,\n          md: size === SIZES.MEDIUM,\n          lg: size === SIZES.HUGE,\n          space: size === SIZES.SPACE,\n          'is-loading': loading,\n        })}\n        onMouseUp={handleClick}\n        disabled={!!disabled}\n      >\n        {iconComponent && <span className=\"icon\">{iconComponent}</span>}\n        {text && <span>{text}</span>}\n      </button>\n    </Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function ({ children }) {\n  return <div className=\"is-flex is-flex-direction-row is-justify-content-center\">{children}</div>;\n}\n","import React from 'react';\nimport Column from './Column';\nimport Button from './Button';\n\nexport default function ({...others}) {\n  return (\n    <Column {...others}>\n      <Button invisible />\n    </Column>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { distribute, randomUuid } from '../utils/Utils';\nimport Button from '../widgets/Button';\nimport ButtonGroup from '../widgets/ButtonGroup';\nimport Column from '../widgets/Column';\nimport ColumnSpace from '../widgets/ColumnSpace';\nimport Row from '../widgets/Row';\n\nexport default function SelectInput({\n  id,\n  text,\n  bg = () => 'secondary',\n  options,\n  rows,\n  cols,\n  multiSelect,\n  value,\n  alwaysShowPages,\n  onSelectOption,\n}) {\n  const [page, setPage] = useState(0);\n\n  useEffect(() => {\n    setPage(0);\n  }, [options]);\n\n  function isSelected(v) {\n    if (!value) {\n      return false;\n    }\n    if (!multiSelect) {\n      return id(value) === id(v);\n    }\n    return !!value.find(val => id(val) === id(v));\n  }\n\n  function buildPageButtons(groups, currentPage) {\n    if (groups.length > 1 || alwaysShowPages) {\n      const btns = [];\n      groups.forEach((group, index) => {\n        btns.push(\n          <Button\n            key={btns.length}\n            active={currentPage === index}\n            onClick={() => setPage(index)}\n            text={index + 1}\n          />,\n        );\n      });\n      return (\n        <Row margin={null}>\n          <Column grow>\n            <ButtonGroup>{btns}</ButtonGroup>\n          </Column>\n        </Row>\n      );\n    }\n    return null;\n  }\n\n  const rs = rows || 3;\n  const cs = cols || 3;\n  const pageSize = rs * cs;\n\n  let optionsList;\n\n  optionsList = distribute(options, pageSize);\n  const currentPage = Math.min(page, optionsList.length - 1);\n\n  const pageButtons = buildPageButtons(optionsList, currentPage);\n\n  optionsList = optionsList[currentPage];\n  optionsList = distribute(optionsList, cs);\n  optionsList = optionsList.map((row, rowIndex) => {\n    const buttons = row.map((option) => {\n      // FIXME\n      const color = option.color || 'secondary';\n\n      return (\n        <Column key={id(option)} grow grid>\n          <Button\n            type={bg}\n            color={color}\n            active={isSelected(option)}\n            kind={bg(option)}\n            text={text(option)}\n            onClick={() => onSelectOption(option)}\n          />\n        </Column>\n      );\n    });\n\n    while (buttons.length < cs) {\n      buttons.push(<ColumnSpace key={buttons.length} grow grid />);\n    }\n    return <Row margin={null} key={randomUuid()} grow wrap spaced>{buttons}</Row>;\n  });\n\n  while (optionsList.length < rs) {\n    optionsList.push(\n      <Row margin={null} key={optionsList.length} grow>\n        <ColumnSpace />\n      </Row>,\n    );\n  }\n\n  return (\n    <Row grow>\n      <Column grow spaced>\n        <Row>\n          <Column grow spaced>{optionsList}</Column>\n        </Row>\n        {pageButtons}\n      </Column>\n    </Row>\n  );\n}\n","import { useCallback, useContext } from 'react';\nimport Axios from 'axios';\nimport AppContext from '../ApplicationContext';\n\nexport const appUrl = '/rest/';\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\nexport default function () {\n  const { notifyError, startLoading, stopLoading } = useContext(AppContext);\n\n  const remoteCall = useCallback(\n    async (call) => {\n      try {\n        startLoading();\n        const response = await call();\n        stopLoading();\n        return response.data;\n      } catch (err) {\n        stopLoading();\n        if (err.response && err.response.data) {\n          notifyError(err.response.data);\n        } else {\n          notifyError('Errore sul server');\n        }\n      }\n      return null;\n    },\n    [notifyError, startLoading, stopLoading],\n  );\n\n  const get = useCallback(res => remoteCall(() => Axios.get(appUrl + res)), [\n    remoteCall,\n  ]);\n  const put = useCallback(\n    (res, data) => remoteCall(() => Axios.put(appUrl + res, data, config)),\n    [remoteCall],\n  );\n  const post = useCallback(\n    (res, data) => remoteCall(() => Axios.post(appUrl + res, data)),\n    [remoteCall],\n  );\n  const remove = useCallback(\n    res => remoteCall(() => Axios.delete(appUrl + res)),\n    [remoteCall],\n  );\n\n  return {\n    get,\n    put,\n    post,\n    remove,\n  };\n}\n","import React from 'react';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport ButtonGroup from '../widgets/ButtonGroup';\nimport Button from '../widgets/Button';\nimport Row from '../widgets/Row';\nimport Column from '../widgets/Column';\n\nexport default function BooleanInput({\n  label,\n  value,\n  onConfirm,\n}) {\n  return (\n    <Row>\n      <Column justifyCenter>\n        {label}\n      </Column>\n      <Column>\n        <ButtonGroup>\n          <Button\n            kind={!value ? 'danger' : 'secondary'}\n            icon={faTimes}\n            onClick={() => onConfirm(false)}\n          />\n          <Button\n            kind={value ? 'success' : 'secondary'}\n            icon={faCheck}\n            onClick={() => onConfirm(true)}\n          />\n        </ButtonGroup>\n      </Column>\n    </Row>\n  );\n}\n","export default function (value) {\n  if (value !== null && value !== undefined) {\n    return `€${value.toFixed(2)}`;\n  }\n  return '?';\n}\n","import classNames from 'classnames';\nimport React from 'react';\n\nexport default function Modal({\n  visible, size, children, onClose,\n}) {\n  return visible && (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onMouseUp={onClose} />\n      <div className={classNames('modal-content', {\n        'is-large': size === 'lg',\n        'is-medium': size === 'md',\n      })}\n      >\n        <div className=\"box\">\n          {children}\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        onMouseUp={onClose}\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n      />\n    </div>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Column from './Column';\nimport Row from './Row';\nimport Button, { SIZES } from './Button';\n\nconst BUTTONS = [\n  ['1', '2', '3', '4', '5'],\n  ['6', '7', '8', '9', '0'],\n];\n\nexport const CANC = 'CANC';\n\nexport default function ({\n  disabled,\n  onChar\n}) {\n  const n1 = BUTTONS[0].map(n => (\n    <Column key={n} grow>\n      <Button\n        disabled={disabled}\n        text={n}\n        onClick={() => onChar(n)}\n      />\n    </Column>\n  ));\n  const n2 = BUTTONS[1].map(n => (\n    <Column key={n} grow>\n      <Button\n        disabled={disabled}\n        text={n}\n        onClick={() => onChar(n)}\n      />\n    </Column>\n  ));\n\n\n  return (\n    <Column spaced>\n      <Row spaced>\n        {n1}\n      </Row>\n      <Row spaced>\n        {n2}\n      </Row>\n      <Row spaced>\n        <Column grow>\n          <Button\n            disabled={disabled}\n            text=\"C\"\n            size={SIZES.XSMALL}\n            onClick={() => onChar('CANC')}\n          />\n        </Column>\n      </Row>\n    </Column>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Column from './Column';\nimport Row from './Row';\nimport Button from './Button';\n\nconst BUTTONS = [\n  ['1', '2', '3'],\n  ['4', '5', '6'],\n  ['7', '8', '9'],\n  ['0', ','],\n];\n\nexport const CANC = 'CANC';\n\nexport default function ({\n  disabled,\n  onChar\n}) {\n  const n1 = BUTTONS[0].map(n => (\n    <Column grow>\n      <Button\n        key={n}\n        disabled={disabled}\n        text={n}\n        onClick={() => onChar(n)}\n      />\n    </Column>\n  ));\n  const n2 = BUTTONS[1].map(n => (\n    <Column grow>\n      <Button\n        key={n}\n        disabled={disabled}\n        text={n}\n        onClick={() => onChar(n)}\n      />\n    </Column>\n  ));\n  const n3 = BUTTONS[2].map(n => (\n    <Column grow>\n      <Button\n        key={n}\n        disabled={disabled}\n        text={n}\n        onClick={() => onChar(n)}\n      />\n    </Column>\n  ));\n  const n4 = BUTTONS[3].map(n => (\n    <Column grow>\n      <Button\n        key={n}\n        disabled={disabled}\n        text={n}\n        onClick={() => onChar(n)}\n      />\n    </Column>\n  ));\n\n  return (\n    <Fragment>\n      <Column spaced>\n        <Row spaced>\n          {n1}\n        </Row>\n        <Row spaced>\n          {n2}\n        </Row>\n        <Row spaced>\n          {n3}\n        </Row>\n        <Row spaced>\n          {n4}\n        </Row>\n        <Row spaced>\n          <Column grow>\n            <Button\n              disabled={disabled}\n              text=\"C\"\n              onClick={() => onChar('CANC')}\n            />\n          </Column>\n        </Row>\n      </Column>\n    </Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport numeral from 'numeral';\nimport Column from '../widgets/Column';\nimport { CANC } from '../widgets/IntKeyPad';\nimport KeyPad from '../widgets/KeyPad';\nimport Row from '../widgets/Row';\n\nexport default function FloatInput({\n  value, placeholder, disabled, onChange, hit, currency,\n}) {\n  const [text, setText] = useState(value.toString());\n\n  function updateValue(txt) {\n    let wrapped = numeral(txt);\n    setText(txt);\n    if (!isNaN(wrapped.value())) {\n      if (currency) {\n        wrapped = numeral(wrapped.format('0.00'));\n      }\n      const newValue = wrapped.value();\n      if (newValue !== value) {\n        onChange(newValue);\n      }\n    }\n  }\n\n  function onChar(char) {\n    let newText = text;\n    if (char === CANC) {\n      newText = '0';\n    } else {\n      if (newText === '0' || !hit) {\n        newText = '';\n      }\n      newText += char;\n    }\n    updateValue(newText);\n  }\n\n  return (\n    <Column spaced>\n      <Row>\n        <Column grow>\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input is-primary\"\n                type=\"text\"\n                placeholder={placeholder}\n                disabled={disabled}\n                value={text || ''}\n                onChange={data => updateValue(data)}\n              />\n            </div>\n          </div>\n        </Column>\n      </Row>\n      <Row>\n        <Column grow>\n          <KeyPad disabled={disabled} onChar={char => onChar(char)} />\n        </Column>\n      </Row>\n    </Column>\n  );\n}\n","import { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment, useState } from 'react';\nimport useCurrency from '../utils/useCurrency';\nimport Button from '../widgets/Button';\nimport Column from '../widgets/Column';\nimport Modal from '../widgets/Modal';\nimport Row from '../widgets/Row';\nimport FloatInput from './FloatInput';\n\nexport default function FloatEditor({\n  label,\n  initialValue,\n  currency,\n  disabled,\n  type,\n  onConfirm,\n  ...others\n}) {\n  const [value, setValue] = useState(initialValue);\n  const [shown, setShown] = useState(false);\n  const [hit, setHit] = useState(false);\n\n  const formattedValue = useCurrency(initialValue);\n\n  function show() {\n    setHit(false);\n    setValue(initialValue);\n    setShown(true);\n  }\n\n  function hide() {\n    setShown(false);\n  }\n\n  function updateValue(v) {\n    setHit(true);\n    setValue(v);\n  }\n\n  const text = `${label}: ${currency ? formattedValue : initialValue}`;\n  return (\n    <Fragment>\n      <Modal visible={shown} onClose={hide}>\n        <Column spaced>\n          <Row>\n            <Column grow>\n              <FloatInput\n                value={value}\n                onChange={updateValue}\n                hit={hit}\n                {...others}\n                currency={currency}\n              />\n            </Column>\n          </Row>\n          <Row spaced>\n            <Column grow>\n              <Button\n                kind=\"danger\"\n                icon={faTimes}\n                onClick={hide}\n              />\n            </Column>\n            <Column grow>\n              <Button\n                kind=\"success\"\n                icon={faCheck}\n                onClick={() => {\n                  hide();\n                  setShown(false);\n                  onConfirm(value);\n                }}\n              />\n            </Column>\n          </Row>\n        </Column>\n      </Modal>\n      <Button\n        disabled={disabled}\n        type={type}\n        highPadding\n        text={text}\n        onClick={show}\n      />\n    </Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { faLock, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport Row from '../widgets/Row';\nimport Column from '../widgets/Column';\nimport Button, { SIZES } from '../widgets/Button';\n\nconst NUMBERS = ['\\\\', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '\\'', 'ì'];\n\nconst UPPERCASE = [\n  ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', 'é', '*'],\n  ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'ç', '°', '§'],\n  ['>', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', ';', ':', '_'],\n];\nconst LOWERCASE = [\n  ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'è', '+'],\n  ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'ò', 'à', 'ù'],\n  ['<', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '-'],\n];\n\nexport const BACKSPACE = 'BACKSPACE';\nexport const LEFT = 'ARROWLEFT';\nexport const RIGHT = 'ARROWRIGHT';\nexport const SHIFT = 'SHIFT';\nexport const CTRL = 'CONTROL';\nexport const ALT = 'ALT';\nexport const META = 'META';\nexport const LOCK = 'CAPSLOCK';\nexport const DELETE = 'DELETE';\n\nexport default function ({ onChar }) {\n  const [uppercase, setUppercase] = useState(false);\n\n  function onButtonClick(char) {\n    onChar(char);\n  }\n\n  function onDelClick() {\n    onChar(BACKSPACE);\n  }\n\n  function onRightClick() {\n    onChar(RIGHT);\n  }\n\n  function onLeftClick() {\n    onChar(LEFT);\n  }\n\n  function onCapsLockClick() {\n    setUppercase(upper => !upper);\n  }\n\n  const letters = uppercase ? UPPERCASE : LOWERCASE;\n\n  const numbers = NUMBERS.map(n => (\n    <Button\n      size={SIZES.XXSMALL}\n      //   reduced={this.props.reduced}\n      key={n}\n      text={n}\n      onClick={() => onButtonClick(n)}\n    />\n  ));\n  const letters1 = letters[0].map(n => (\n    <Button\n      size={SIZES.XXSMALL}\n      // reduced={this.props.reduced}\n      key={n}\n      text={n}\n      onClick={() => onButtonClick(n)}\n    />\n  ));\n  const letters2 = letters[1].map(n => (\n    <Button\n      size={SIZES.XXSMALL}\n      // reduced={this.props.reduced}\n      key={n}\n      text={n}\n      onClick={() => onButtonClick(n)}\n    />\n  ));\n  const letters3 = letters[2].map(n => (\n    <Button\n      size={SIZES.XXSMALL}\n      // reduced={this.props.reduced}\n      key={n}\n      text={n}\n      onClick={() => onButtonClick(n)}\n    />\n  ));\n\n  return (\n    <Row>\n      <Column spaced>\n        <Row spaced>\n          {numbers}\n          <Button text=\"canc\" size={SIZES.XXSMALL} onClick={onDelClick}/>\n        </Row>\n        <Row spaced>{letters1}</Row>\n        <Row spaced>\n          <Button icon={faLock} size={SIZES.XXSMALL} onClick={onCapsLockClick}/>\n          {letters2}\n        </Row>\n        <Row spaced>{letters3}</Row>\n        <Row spaced>\n          <Button icon={faAngleLeft} size={SIZES.XXSMALL} type=\"info\" onClick={onLeftClick}/>\n          <Button text=\"&nbsp;\" size={SIZES.MEDIUM} onClick={() => onButtonClick(' ')}/>\n          <Button icon={faAngleRight} size={SIZES.XXSMALL} type=\"info\" onClick={onRightClick}/>\n        </Row>\n      </Column>\n    </Row>\n  );\n}\n","import $ from 'jquery';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { randomUuid } from '../utils/Utils';\nimport Column from '../widgets/Column';\nimport Row from '../widgets/Row';\nimport Keyboard, {\n  BACKSPACE, DELETE, LEFT, RIGHT,\n} from './Keyboard';\n\nexport default function ({\n  value,\n  placeholder,\n  disabled,\n  onChange,\n  password,\n}) {\n  const [caret, setCaret] = useState(value ? value.length : 0);\n  const [id] = useState(randomUuid());\n\n  useEffect(() => {\n    const textInput = $(`#${id}`);\n    setTimeout(() => {\n      textInput[0].setSelectionRange(caret, caret);\n      textInput[0].focus();\n    }, 100);\n  }, [caret, id]);\n\n  function onCharImpl(char) {\n    const oldText = value || '';\n    let newText = oldText;\n    switch (char.toUpperCase()) {\n      case BACKSPACE:\n        if (oldText.length > 0 && caret > 0) {\n          newText = oldText.slice(0, caret - 1) + oldText.slice(caret, oldText.length);\n          setCaret(c => c - 1);\n        }\n        break;\n      case LEFT:\n        if (caret > 0) {\n          setCaret(c => c - 1);\n        }\n        break;\n      case RIGHT:\n        if (caret < oldText.length) {\n          setCaret(c => c + 1);\n        }\n        break;\n      default:\n        if (char.length === 1) {\n          newText = oldText.slice(0, caret) + char + oldText.slice(caret, oldText.length);\n          setCaret(c => c + 1);\n        }\n        break;\n    }\n\n    onChange(newText);\n  }\n\n  function onKeyDown(data) {\n    if (data.key === 'ArrowLeft') {\n      onCharImpl(LEFT);\n    } else if (data.key === 'ArrowRight') {\n      onCharImpl(RIGHT);\n    }\n  }\n\n  function onChar(char, evt) {\n    if (char && !evt) {\n      onCharImpl(char);\n    } else {\n      switch (evt.inputType) {\n        case 'deleteContentBackward':\n          onCharImpl(BACKSPACE);\n          break;\n        case 'deleteContentForward':\n          onCharImpl(DELETE);\n          break;\n        default:\n          if (char) {\n            onCharImpl(char);\n          }\n          break;\n      }\n    }\n  }\n\n  function updateCaret() {\n    const input = $(`#${id}`)[0];\n    setCaret(input.selectionStart);\n  }\n\n  return (\n    <Column spaced>\n      <Row>\n        <Column grow>\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                id={id}\n                className=\"input is-primary\"\n                type={password ? 'password' : 'text'}\n                placeholder={placeholder}\n                disabled={disabled}\n                value={value || ''}\n                onMouseUp={updateCaret}\n                onKeyDown={data => onKeyDown(data)}\n                onChange={data => onChar(data.nativeEvent.data, data.nativeEvent)}\n              />\n            </div>\n          </div>\n        </Column>\n      </Row>\n      <Row>\n        <Column>\n          <Keyboard disabled={disabled} onChar={char => onChar(char)}/>\n        </Column>\n      </Row>\n    </Column>\n  );\n}\n","import { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment, useState } from 'react';\nimport Button from '../widgets/Button';\nimport Column from '../widgets/Column';\nimport Modal from '../widgets/Modal';\nimport Row from '../widgets/Row';\nimport TextInput from './TextInput';\n\nexport default function ({\n  label,\n  disabled,\n  kind = 'secondary',\n  initialValue,\n  onConfirm,\n  password,\n  ...others\n}) {\n  const [value, setValue] = useState(initialValue);\n  const [shown, setShown] = useState(false);\n\n  function show() {\n    setValue(initialValue);\n    setShown(true);\n  }\n\n  function hide() {\n    setShown(false);\n  }\n\n  function updateValue(v) {\n    setValue(v);\n  }\n\n  const text = `${label}: ${initialValue && !password ? initialValue.toString() : ''}`;\n\n  return (\n    <Fragment>\n      <Modal visible={shown} onClose={hide} lg>\n        <Column spaced>\n          <Row>\n            <Column grow>\n              <TextInput\n                value={value}\n                onChange={updateValue}\n                password={password}\n                {...others}\n              />\n            </Column>\n          </Row>\n          <Row spaced>\n            <Column grow>\n              <Button\n                kind=\"danger\"\n                icon={faTimes}\n                onClick={hide}\n              />\n            </Column>\n            <Column grow>\n              <Button\n                kind=\"success\"\n                icon={faCheck}\n                onClick={() => {\n                  hide();\n                  setShown(false);\n                  onConfirm(value);\n                }}\n              />\n            </Column>\n          </Row>\n        </Column>\n      </Modal>\n      <Button\n        disabled={disabled}\n        kind={kind}\n        highPadding\n        text={text}\n        onClick={show}\n      />\n    </Fragment>\n  );\n}\n","import React from 'react';\n\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport Row from './Row';\nimport Column from './Column';\nimport Button from './Button';\nimport Modal from './Modal';\n\nexport default function OkCancelDialog({\n  children,\n  size,\n  visible,\n  onCancel,\n  onOk,\n  okText,\n  cancelText,\n}) {\n  return (\n    <Modal visible={visible} onClose={onCancel} size={size}>\n      <Column grow spaced>\n        <Row grow>\n          <Column grow>{children}</Column>\n        </Row>\n        <Row spaced>\n          <Column grow>\n            <Button\n              kind=\"danger\"\n              text={cancelText || 'Annulla'}\n              icon={faTimes}\n              onClick={onCancel}\n            />\n          </Column>\n          <Column grow>\n            <Button\n              kind=\"success\"\n              text={okText || 'Conferma'}\n              icon={faCheck}\n              onClick={onOk}\n            />\n          </Column>\n        </Row>\n      </Column>\n    </Modal>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport Button from './Button';\nimport OkCancelDialog from './OkCancelDialog';\n\nexport default function ConfirmButton({\n  confirmMessage,\n  onClick,\n  ...others\n}) {\n  const [dialogVisible, setDialogVisible] = useState(false);\n\n  return (\n    <Fragment>\n      <Button\n        {...others}\n        onClick={() => setDialogVisible(true)}\n      />\n      {confirmMessage && (\n      <OkCancelDialog\n        onOk={() => {\n          setDialogVisible(false);\n          onClick();\n        }}\n        onCancel={() => setDialogVisible(false)}\n        visible={dialogVisible}\n      >\n        <p>{confirmMessage}</p>\n      </OkCancelDialog>\n      )}\n    </Fragment>\n  );\n}\n","import { faCheck, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\nimport BooleanInput from '../../../inputs/BooleanInput';\nimport FloatEditor from '../../../inputs/FloatEditor';\nimport TextEditor from '../../../inputs/TextEditor';\nimport useNetwork from '../../../utils/useNetwork';\nimport useRemote from '../../../utils/useRemote';\nimport Button from '../../../widgets/Button';\nimport Column from '../../../widgets/Column';\nimport ConfirmButton from '../../../widgets/ConfirmButton';\nimport Modal from '../../../widgets/Modal';\nimport Row from '../../../widgets/Row';\n\nexport default function AdditionEditor({\n  onClose,\n  addition: additionUuid,\n  refresh: refreshAll\n}) {\n  const {\n    put,\n    remove\n  } = useNetwork();\n\n  const [addition, refreshThis] = useRemote(`additions/${additionUuid}`);\n\n  async function updateProperty(name, value) {\n    await put(`additions/${additionUuid}/${name}`, { value });\n    refreshAll();\n    refreshThis();\n  }\n\n  async function deleteAddition() {\n    const result = await remove(`additions/${additionUuid}`);\n    if (result !== null) {\n      refreshAll();\n      onClose();\n    }\n  }\n\n  if (!addition) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} visible>\n      <Column spaced>\n        <Row>\n          <Column grow>\n            <TextEditor\n              label=\"Nome\"\n              initialValue={addition.name}\n              onConfirm={value => updateProperty('name', value)}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <FloatEditor\n              label=\"Prezzo\"\n              initialValue={addition.price}\n              onConfirm={value => updateProperty('price', value)}\n              currency\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <BooleanInput\n              label=\"Generica\"\n              value={addition.generic}\n              falseLabel=\"No\"\n              trueLabel=\"Sì\"\n              onConfirm={value => updateProperty('generic', value.toString())}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <ConfirmButton\n              confirmMessage=\"Eliminare la variante?\"\n              text=\"Elimina\"\n              icon={faTrash}\n              kind=\"danger\"\n              onClick={deleteAddition}\n            />\n          </Column>\n          <Column grow>\n            <Button\n              text=\"Conferma\"\n              kind=\"success\"\n              icon={faCheck}\n              onClick={onClose}/>\n          </Column>\n        </Row>\n      </Column>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport Column from './Column';\nimport Row from './Row';\n\nexport default function Wrap({ children, ...others }) {\n  return (\n    <Row {...others}>\n      <Column>\n        {children}\n      </Column>\n    </Row>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Row from '../../../widgets/Row';\nimport Column from '../../../widgets/Column';\nimport useRemote from '../../../utils/useRemote';\nimport SelectInput from '../../../inputs/SelectInput';\nimport useNetwork from '../../../utils/useNetwork';\nimport AdditionEditor from './AdditionEditor';\nimport Wrap from '../../../widgets/Wrap';\nimport Button from '../../../widgets/Button';\n\nexport default function AdditionsConfigurationPage() {\n  const { post } = useNetwork();\n\n  const [additions, refresh] = useRemote('additions');\n\n  const [selected, setSelected] = useState(null);\n\n  async function createAddition() {\n    const result = await post('additions');\n    if (result != null) {\n      refresh();\n      setSelected(result);\n    }\n  }\n\n  return (\n    <Fragment>\n      <Row>\n        <Column grow>\n          <p className=\"h4 has-text-centered\">Varianti</p>\n        </Column>\n      </Row>\n      <Row grow>\n        <Column grow>\n          <SelectInput\n            options={additions || []}\n            id={addition => addition.uuid}\n            text={addition => addition.name}\n            rows={6}\n            cols={4}\n            onSelectOption={addition => setSelected(addition.uuid)}\n          />\n        </Column>\n        {selected && (\n          <AdditionEditor\n            onClose={() => setSelected(null)}\n            addition={selected}\n            refresh={refresh}\n          />\n        )}\n      </Row>\n      <Row>\n        <Column grow>\n          <Button icon={faPlus} text=\"Nuova variante\" kind=\"success\" onClick={createAddition}/>\n        </Column>\n      </Row>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport Icon from './Icon';\nimport Row from './Row';\nimport Column from './Column';\n\nexport default function ({\n  kind,\n  active,\n  size,\n  icon,\n  text,\n  onClick,\n  disabled,\n}) {\n  function getClassName() {\n    const classes = ['button'];\n    if (kind && !active) {\n      classes.push(`is-${kind}`);\n    } else if (active) {\n      classes.push('is-primary');\n    }\n    if (size) {\n      classes.push(size);\n    } else {\n      classes.push('lg');\n    }\n    classes.push('round');\n    return classes.join(' ');\n  }\n\n  return (\n    <button type=\"button\" className={getClassName()} onClick={onClick} disabled={!!disabled}>\n      <Column spaced alignCenter>\n        {icon && (\n          <Row>\n            <Column hCenter vCenter>\n              <Icon name={icon} />\n            </Column>\n          </Row>\n        )}\n        <Row>\n          <Column hCenter vCenter>\n            {text}\n          </Column>\n        </Row>\n      </Column>\n    </button>\n  );\n}\n","import {\n  faCarrot,\n  faPeopleCarry,\n  faPlus,\n  faPrint,\n  faTable,\n} from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment } from 'react';\nimport screenfull from 'screenfull';\nimport { faUser } from '@fortawesome/free-solid-svg-icons/faUser';\nimport Column from '../../widgets/Column';\nimport RoundButton from '../../widgets/RoundButton';\nimport Row from '../../widgets/Row';\n\nexport default function ({ navigate }) {\n  return (\n    <Fragment>\n      <Row grow justifyAround>\n        <Column>\n          <RoundButton\n            text=\"Tavoli\"\n            icon={faTable}\n            onClick={() => {\n              navigate('tables');\n              screenfull.request();\n            }}\n            size=\"xl\"\n            vertical\n            fill\n          />\n        </Column>\n        <Column>\n          <RoundButton\n            text=\"Menu\"\n            icon={faCarrot}\n            onClick={() => {\n              navigate('menu');\n              screenfull.request();\n            }}\n            size=\"xxl\"\n            vertical\n            fill\n          />\n        </Column>\n        <Column>\n          <RoundButton\n            text=\"Camerieri\"\n            icon={faPeopleCarry}\n            onClick={() => {\n              navigate('waiters');\n              screenfull.request();\n            }}\n            size=\"xl\"\n            vertical\n            fill\n          />\n        </Column>\n      </Row>\n      <Row grow justifyAround>\n        <Column>\n          <RoundButton\n            text=\"Varianti\"\n            icon={faPlus}\n            onClick={() => {\n              navigate('additions');\n              screenfull.request();\n            }}\n            size=\"xl\"\n            vertical\n            fill\n          />\n        </Column>\n        <Column>\n          <RoundButton\n            text=\"Stampanti\"\n            icon={faPrint}\n            onClick={() => {\n              navigate('printers');\n              screenfull.request();\n            }}\n            size=\"xl\"\n            vertical\n            fill\n          />\n        </Column>\n        <Column>\n          <RoundButton\n            text=\"Clienti\"\n            icon={faUser}\n            onClick={() => {\n              navigate('customers');\n              screenfull.request();\n            }}\n            size=\"xl\"\n            vertical\n            fill\n          />\n        </Column>\n      </Row>\n    </Fragment>\n  );\n}\n","\nexport default function ConfigurationPage({ children }) {\n  return children;\n}\n","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment } from 'react';\nimport SelectInput from '../../../inputs/SelectInput';\nimport useNetwork from '../../../utils/useNetwork';\nimport useRemote from '../../../utils/useRemote';\nimport Column from '../../../widgets/Column';\nimport Row from '../../../widgets/Row';\nimport Wrap from '../../../widgets/Wrap';\nimport Button from '../../../widgets/Button';\n\nexport default function CategoriesConfigurationSection({ navigate }) {\n  const { post } = useNetwork();\n\n  const [categories, refresh] = useRemote('categories');\n\n  async function createCategory() {\n    const result = await post('categories');\n    if (result != null) {\n      await refresh();\n      navigate(result);\n    }\n  }\n\n  return (\n    <Fragment>\n      <Row>\n        <Column grow>\n          <p className=\"h4 has-text-centered\">Categorie</p>\n        </Column>\n      </Row>\n      <Row grow>\n        <Column grow>\n          <SelectInput\n            options={categories || []}\n            id={cat => cat.uuid}\n            text={cat => cat.name}\n            bg={cat => cat.color}\n            rows={4}\n            cols={4}\n            onSelectOption={cat => navigate(cat.uuid)}\n          />\n        </Column>\n      </Row>\n      <Row>\n        <Column grow>\n          <Button\n            icon={faPlus}\n            text=\"Nuova categoria\"\n            kind=\"success\"\n            onClick={createCategory}\n          />\n        </Column>\n      </Row>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport Button from '../widgets/Button';\nimport Modal from '../widgets/Modal';\nimport SelectInput from './SelectInput';\nimport Row from '../widgets/Row';\nimport Column from '../widgets/Column';\n\nexport default function SelectEditor({\n  id = v => v,\n  text = v => v,\n  maxChars,\n  options,\n  value,\n  disabled,\n  kind,\n  label,\n  multiSelect,\n  onSelectOption,\n  valueId,\n  ...others\n}) {\n  const [shown, setShown] = useState(false);\n\n  function findOption(val) {\n    return options.find(opt => id(opt) === val);\n  }\n\n  function onSelectOptionImpl(v) {\n    if (!multiSelect) {\n      setShown(false);\n    }\n    onSelectOption(v);\n  }\n\n  let valueObject;\n  let val;\n  if (!multiSelect) {\n    if (valueId !== null && valueId !== undefined) {\n      valueObject = findOption(value);\n    } else {\n      valueObject = value;\n    }\n    val = valueObject !== null && valueObject !== undefined ? text(valueObject) : '';\n  } else {\n    val = value.map(v => text(v))\n      .join(', ');\n    if (maxChars) {\n      const fullSize = val.length;\n      const limit = Math.min(fullSize, maxChars);\n      val = val.substring(0, limit);\n      if (val.length < fullSize) {\n        val += '...';\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <Modal visible={shown} onClose={() => setShown(!shown)}>\n        <Column spaced>\n          <Row grow>\n            <Column grow>\n              <SelectInput\n                id={id}\n                text={text}\n                multiSelect={multiSelect}\n                options={options}\n                value={value}\n                onSelectOption={onSelectOptionImpl}\n                {...others}\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column grow>\n              <Button text=\"Chiudi\" kind=\"info\" onClick={() => setShown(false)} />\n            </Column>\n          </Row>\n        </Column>\n      </Modal>\n      <Button\n        disabled={disabled}\n        kind={kind}\n        text={`${label}: ${val}`}\n        onClick={() => setShown(!shown)}\n      />\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport SelectEditor from './SelectEditor';\n\nexport default function ColorInput({ label, onConfirm, value }) {\n  return (\n    <SelectEditor\n      label={label}\n      options={[\n        'secondary', 'danger', 'info', 'success', 'warning', 'purple',\n      ]}\n      kind={value || 'secondary'}\n      text={() => ''}\n      bg={opt => opt}\n      value={value}\n      onSelectOption={onConfirm}\n    />\n  );\n}\n","import React, { useEffect } from 'react';\nimport useRemote from '../utils/useRemote';\nimport SelectEditor from './SelectEditor';\n\nexport default function RemoteSelectEditor({\n  url, ...others\n}) {\n  const [data, refresh] = useRemote(url);\n\n  useEffect(() => { refresh(); }, [url, refresh]);\n\n  return (\n    <SelectEditor options={data || []} {...others} />\n  );\n}\n","import React from 'react';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport Modal from '../../../widgets/Modal';\nimport TextEditor from '../../../inputs/TextEditor';\nimport Row from '../../../widgets/Row';\nimport Column from '../../../widgets/Column';\nimport useNetwork from '../../../utils/useNetwork';\nimport useRemote from '../../../utils/useRemote';\nimport Button from '../../../widgets/Button';\nimport ConfirmButton from '../../../widgets/ConfirmButton';\nimport RemoteSelectEditor from '../../../inputs/RemoteSelectEditor';\nimport FloatEditor from '../../../inputs/FloatEditor';\n\nexport default function DishEditor({\n  navigate,\n  onClose,\n  dish: dishUuid,\n  refresh: refreshAll,\n}) {\n  const {\n    put,\n    remove\n  } = useNetwork();\n\n  const [dish, refreshThis] = useRemote(`dishes/${dishUuid}`);\n\n  async function updateProperty(name, value) {\n    await put(`dishes/${dishUuid}/${name}`, { value });\n    refreshAll();\n    refreshThis();\n  }\n\n  async function updateCategory(value) {\n    await put(`dishes/${dishUuid}/category`, { value });\n    await refreshThis();\n    navigate(`../${value}`);\n  }\n\n  async function deleteDish() {\n    const result = await remove(`dishes/${dishUuid}`);\n    if (result !== null) {\n      refreshAll();\n      onClose();\n    }\n  }\n\n  if (!dish) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} visible>\n      <Column spaced>\n        <Row>\n          <Column grow>\n            <TextEditor\n              label=\"Nome\"\n              initialValue={dish.name}\n              onConfirm={value => updateProperty('name', value)}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <TextEditor\n              label=\"Descrizione\"\n              initialValue={dish.description}\n              onConfirm={value => updateProperty('description', value)}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <FloatEditor\n              label=\"Prezzo\"\n              initialValue={dish.price}\n              onConfirm={value => updateProperty('price', value)}\n              currency\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <RemoteSelectEditor\n              url=\"dishes-statuses\"\n              label=\"Stato\"\n              value={dish.status}\n              onSelectOption={value => updateProperty('status', value)}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <RemoteSelectEditor\n              url=\"categories\"\n              text={cat => cat.name}\n              id={cat => cat.uuid}\n              label=\"Categoria\"\n              value={dish.categoryId}\n              onSelectOption={value => updateCategory(value.uuid)}\n              valueId\n            />\n          </Column>\n        </Row>\n        <Row spaced>\n          <Column grow>\n            <ConfirmButton\n              confirmMessage=\"Eliminare il piatto?\"\n              text=\"Elimina\"\n              icon={faTrash}\n              kind=\"danger\"\n              onClick={deleteDish}\n            />\n          </Column>\n          <Column grow>\n            <Button text=\"Chiudi\" kind=\"info\" onClick={onClose}/>\n          </Column>\n        </Row>\n      </Column>\n    </Modal>\n  );\n}\n","import { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment, useState } from 'react';\nimport ColorInput from '../../../inputs/ColorInput';\nimport RemoteSelectEditor from '../../../inputs/RemoteSelectEditor';\nimport SelectInput from '../../../inputs/SelectInput';\nimport TextEditor from '../../../inputs/TextEditor';\nimport useNetwork from '../../../utils/useNetwork';\nimport useRemote from '../../../utils/useRemote';\nimport Button from '../../../widgets/Button';\nimport Column from '../../../widgets/Column';\nimport ConfirmButton from '../../../widgets/ConfirmButton';\nimport Row from '../../../widgets/Row';\nimport Wrap from '../../../widgets/Wrap';\nimport DishEditor from './DishEditor';\n\nexport default function CategoryEditor({\n  categoryUuid,\n  navigate\n}) {\n  const {\n    post,\n    put,\n    remove\n  } = useNetwork();\n\n  const [category, refresh] = useRemote(`categories/${categoryUuid}`);\n\n  const [selectedDish, setSelectedDish] = useState(null);\n\n  async function updateProperty(name, value) {\n    await put(`categories/${categoryUuid}/${name}`, { value });\n    refresh();\n  }\n\n  async function deleteCategory() {\n    const result = await remove(`categories/${categoryUuid}`);\n    if (result !== null) {\n      navigate('..');\n    }\n  }\n\n  function onSelectAddition(a) {\n    const additions = category.additions.map(ad => ad.uuid);\n    const index = additions.findIndex(ad => ad === a.uuid);\n    if (index === -1) {\n      updateProperty('additions', [...additions, a.uuid]);\n    } else {\n      additions.splice(index, 1);\n      updateProperty('additions', additions);\n    }\n  }\n\n  async function createDish() {\n    const result = await post(`dishes?category=${categoryUuid}`);\n    if (result != null) {\n      refresh();\n      setSelectedDish(result);\n    }\n  }\n\n  function statusColor(status) {\n    if (status === 'SUSPENDED') {\n      return 'warning';\n    }\n    if (status === 'REMOVED') {\n      return 'danger';\n    }\n    return 'secondary';\n  }\n\n  if (!category) {\n    return null;\n  }\n\n  return (\n    <Column spaced>\n      <Row>\n        <Column grow>\n          <p className=\"h4 has-text-centered\">\n            {`Categoria ${category.name || '???'}`}\n          </p>\n        </Column>\n        <Column grow>\n          <ConfirmButton\n            confirmMessage=\"Eliminare la categoria?\"\n            icon={faTrash}\n            text=\"Elimina categoria\"\n            kind=\"danger\"\n            onClick={deleteCategory}\n          />\n        </Column>\n      </Row>\n      <Row>\n        <Column grow>\n          <TextEditor\n            label=\"Nome\"\n            initialValue={category.name}\n            onConfirm={value => updateProperty('name', value)}\n          />\n        </Column>\n        <Column grow>\n          <RemoteSelectEditor\n            url=\"locations\"\n            label=\"Postazione\"\n            value={category.location}\n            id={l => l.uuid}\n            text={l => l.name}\n            onSelectOption={value => updateProperty('location', value.uuid)}\n          />\n        </Column>\n        <Column grow>\n          <ColorInput\n            label=\"Colore\"\n            value={category.color}\n            onConfirm={value => updateProperty('color', value)}\n          />\n        </Column>\n      </Row>\n      <Row>\n        <Column grow>\n          <RemoteSelectEditor\n            url=\"additions?generic=false\"\n            rows={9}\n            cols={4}\n            label=\"Varianti\"\n            value={category.additions}\n            id={a => a.uuid}\n            text={a => a.name}\n            maxChars={180}\n            onSelectOption={onSelectAddition}\n            multiSelect\n          />\n        </Column>\n      </Row>\n      <Row>\n        <Column grow>\n          <p className=\"h6\">Piatti</p>\n        </Column>\n      </Row>\n      <Row grow>\n        <Column grow>\n          <SelectInput\n            options={category.dishes}\n            rows={4}\n            cols={3}\n            id={d => d.uuid}\n            text={d => d.name}\n            bg={d => statusColor(d.status)}\n            onSelectOption={dish => setSelectedDish(dish.uuid)}\n            multiSelect\n          />\n        </Column>\n        {selectedDish && (\n          <DishEditor\n            onClose={() => setSelectedDish(null)}\n            dish={selectedDish}\n            refresh={refresh}\n            navigate={navigate}\n          />\n        )}\n      </Row>\n      <Row>\n        <Column grow>\n          <Button\n            kind=\"success\"\n            text=\"Nuovo piatto\"\n            icon={faPlus}\n            onClick={createDish}\n          />\n        </Column>\n      </Row>\n    </Column>\n  );\n}\n","export default function MenuConfigurationPage({ children }) {\n  return children;\n}\n","import React from 'react';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport Modal from '../../../widgets/Modal';\nimport TextEditor from '../../../inputs/TextEditor';\nimport Row from '../../../widgets/Row';\nimport Column from '../../../widgets/Column';\nimport useNetwork from '../../../utils/useNetwork';\nimport useRemote from '../../../utils/useRemote';\nimport Button from '../../../widgets/Button';\nimport ConfirmButton from '../../../widgets/ConfirmButton';\nimport RemoteSelectEditor from '../../../inputs/RemoteSelectEditor';\n\nexport default function LocationEditor({\n  onClose,\n  location: locationUuid,\n  refresh: refreshAll\n}) {\n  const {\n    put,\n    remove\n  } = useNetwork();\n\n  const [location, refreshThis] = useRemote(`locations/${locationUuid}`);\n\n  async function updateProperty(name, value) {\n    await put(`locations/${locationUuid}/${name}`, { value });\n    refreshAll();\n    refreshThis();\n  }\n\n  async function deleteLocation() {\n    const result = await remove(`locations/${locationUuid}`);\n    if (result !== null) {\n      refreshAll();\n      onClose();\n    }\n  }\n\n  if (!location) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} visible>\n      <Column spaced>\n        <Row>\n          <Column grow>\n            <TextEditor\n              label=\"Nome\"\n              initialValue={location.name}\n              onConfirm={value => updateProperty('name', value)}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <RemoteSelectEditor\n              label=\"Stampante\"\n              url=\"printers\"\n              id={p => p.uuid}\n              text={p => p.name}\n              value={location.printer}\n              onSelectOption={value => updateProperty('printer', value.uuid)}\n            />\n          </Column>\n        </Row>\n        <Row spaced>\n          <Column grow>\n            <ConfirmButton\n              confirmMessage=\"Eliminare la postazione?\"\n              text=\"Elimina\"\n              icon={faTrash}\n              kind=\"danger\"\n              onClick={deleteLocation}\n            />\n          </Column>\n          <Column grow>\n            <Button text=\"Chiudi\" kind=\"info\" onClick={onClose}/>\n          </Column>\n        </Row>\n      </Column>\n    </Modal>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Row from '../../../widgets/Row';\nimport Column from '../../../widgets/Column';\nimport useRemote from '../../../utils/useRemote';\nimport SelectInput from '../../../inputs/SelectInput';\nimport useNetwork from '../../../utils/useNetwork';\nimport LocationEditor from './LocationEditor';\nimport Wrap from '../../../widgets/Wrap';\nimport Button from '../../../widgets/Button';\n\nexport default function LocationsConfigurationSection() {\n  const { post } = useNetwork();\n\n  const [locations, refresh] = useRemote('locations');\n\n  const [selected, setSelected] = useState(null);\n\n  async function createLocation() {\n    const result = await post('locations');\n    if (result != null) {\n      refresh();\n      setSelected(result);\n    }\n  }\n\n  return (\n    <Fragment>\n      <Row>\n        <Column grow>\n          <p className=\"h4 has-text-centered\">Postazioni</p>\n        </Column>\n      </Row>\n      <Row grow>\n        <Column grow>\n          <SelectInput\n            options={locations || []}\n            id={location => location.uuid}\n            text={location => location.name}\n            rows={4}\n            cols={2}\n            onSelectOption={location => setSelected(location.uuid)}\n          />\n        </Column>\n        {selected && (\n          <LocationEditor\n            onClose={() => setSelected(null)}\n            location={selected}\n            refresh={refresh}\n          />\n        )}\n      </Row>\n      <Row>\n        <Column grow>\n          <Button\n            text=\"Nuova postazione\"\n            icon={faPlus}\n            kind=\"success\"\n            onClick={createLocation}\n          />\n        </Column>\n      </Row>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport Column from '../widgets/Column';\nimport IntKeyPad, { CANC } from '../widgets/IntKeyPad';\nimport Row from '../widgets/Row';\n\nexport default function ({\n  value, placeholder, disabled, onChange, hit,\n}) {\n  const [text, setText] = useState(value ? value.toString() : '0');\n\n  function updateValue(txt) {\n    const newValue = parseInt(txt);\n    setText(txt);\n    if (!isNaN(newValue) && newValue !== value) {\n      onChange(newValue);\n    }\n  }\n\n  function onChar(char) {\n    let newText = text;\n    if (char === CANC) {\n      newText = '0';\n    } else {\n      if (newText === '0' || !hit) {\n        newText = '';\n      }\n      newText += char;\n    }\n    updateValue(newText);\n  }\n\n  return (\n    <Column spaced grow>\n      <Row>\n        <Column grow>\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input is-primary\"\n                type=\"text\"\n                placeholder={placeholder}\n                disabled={disabled}\n                value={text !== undefined ? text : ''}\n                onChange={evt => updateValue(evt.target.value)}\n              />\n            </div>\n          </div>\n        </Column>\n      </Row>\n      <Row>\n        <Column grow>\n          <IntKeyPad disabled={disabled} onChar={char => onChar(char)} />\n        </Column>\n      </Row>\n    </Column>\n  );\n}\n","import { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment, useState } from 'react';\nimport Button from '../widgets/Button';\nimport Column from '../widgets/Column';\nimport Modal from '../widgets/Modal';\nimport Row from '../widgets/Row';\nimport IntegerInput from './IntegerInput';\n\nexport default function ({\n  label,\n  initialValue,\n  disabled,\n  kind,\n  onConfirm,\n  ...others\n}) {\n  const [value, setValue] = useState(initialValue);\n  const [shown, setShown] = useState(false);\n  const [hit, setHit] = useState(false);\n\n  function show() {\n    setHit(false);\n    setValue(initialValue);\n    setShown(true);\n  }\n\n  function hide() {\n    setShown(false);\n  }\n\n  function updateValue(v) {\n    setHit(true);\n    setValue(v);\n  }\n\n  const text = `${label}: ${initialValue ? initialValue.toString() : ''}`;\n  return (\n    <Fragment>\n      <Modal visible={shown} onClose={hide}>\n        <Column spaced>\n          <Row>\n            <Column grow>\n              <IntegerInput\n                value={value}\n                onChange={updateValue}\n                hit={hit}\n                {...others}\n              />\n            </Column>\n          </Row>\n          <Row spaced>\n            <Column grow>\n              <Button\n                kind=\"danger\"\n                icon={faTimes}\n                onClick={hide}\n              />\n            </Column>\n            <Column grow>\n              <Button\n                kind=\"success\"\n                icon={faCheck}\n                onClick={() => {\n                  hide();\n                  setShown(false);\n                  onConfirm(value);\n                }}\n              />\n            </Column>\n          </Row>\n        </Column>\n      </Modal>\n      <Button\n        disabled={disabled}\n        kind={kind}\n        highPadding\n        text={text}\n        onClick={show}\n      />\n    </Fragment>\n  );\n}\n","import { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\nimport IntegerEditor from '../../../inputs/IntegerEditor';\nimport TextEditor from '../../../inputs/TextEditor';\nimport useNetwork from '../../../utils/useNetwork';\nimport useRemote from '../../../utils/useRemote';\nimport Button from '../../../widgets/Button';\nimport Column from '../../../widgets/Column';\nimport ConfirmButton from '../../../widgets/ConfirmButton';\nimport Modal from '../../../widgets/Modal';\nimport Row from '../../../widgets/Row';\n\nexport default function PrinterEditor({\n  onClose,\n  printer: printerUuid,\n  refresh: refreshAll,\n}) {\n  const {\n    put,\n    remove\n  } = useNetwork();\n\n  const [printer, refreshThis] = useRemote(`printers/${printerUuid}`);\n\n  async function updateProperty(name, value) {\n    await put(`printers/${printerUuid}/${name}`, { value });\n    refreshAll();\n    refreshThis();\n  }\n\n  async function deletePrinter() {\n    const result = await remove(`printers/${printerUuid}`);\n    if (result !== null) {\n      refreshAll();\n      onClose();\n    }\n  }\n\n  if (!printer) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} visible>\n      <Column spaced>\n        <Row>\n          <Column grow>\n            <TextEditor\n              label=\"Nome\"\n              initialValue={printer.name}\n              onConfirm={value => updateProperty('name', value)}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <TextEditor\n              label=\"Indirizzo\"\n              initialValue={printer.address}\n              onConfirm={value => updateProperty('address', value)}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <TextEditor\n              label=\"Porta\"\n              initialValue={printer.port}\n              onConfirm={value => updateProperty('port', value)}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <IntegerEditor\n              label=\"Caratteri per riga\"\n              initialValue={printer.lineCharacters}\n              onConfirm={value => updateProperty('lineCharacters', value)}\n            />\n          </Column>\n        </Row>\n        <Row spaced>\n          <Column grow>\n            <ConfirmButton\n              confirmMessage=\"Eliminare la stampante?\"\n              text=\"Elimina\"\n              icon={faTrash}\n              kind=\"danger\"\n              onClick={deletePrinter}\n            />\n          </Column>\n          <Column grow>\n            <Button text=\"Chiudi\" kind=\"info\" onClick={onClose}/>\n          </Column>\n        </Row>\n      </Column>\n    </Modal>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Row from '../../../widgets/Row';\nimport Column from '../../../widgets/Column';\nimport useRemote from '../../../utils/useRemote';\nimport SelectInput from '../../../inputs/SelectInput';\nimport useNetwork from '../../../utils/useNetwork';\nimport PrinterEditor from './PrinterEditor';\nimport Button from '../../../widgets/Button';\nimport Wrap from '../../../widgets/Wrap';\n\nexport default function PrintersConfigurationSection() {\n  const { post } = useNetwork();\n\n  const [printers, refresh] = useRemote('printers');\n\n  const [selected, setSelected] = useState(null);\n\n  async function createPrinter() {\n    const result = await post('printers');\n    if (result != null) {\n      refresh();\n      setSelected(result);\n    }\n  }\n\n  return (\n    <Fragment>\n      <Row>\n        <Column grow>\n          <p className=\"h4 has-text-centered\">Stampanti</p>\n        </Column>\n      </Row>\n      <Row grow>\n        <Column grow>\n          <SelectInput\n            options={printers || []}\n            id={printer => printer.uuid}\n            text={printer => printer.name}\n            rows={4}\n            cols={2}\n            onSelectOption={printer => setSelected(printer.uuid)}\n          />\n        </Column>\n        {selected && (\n          <PrinterEditor\n            onClose={() => setSelected(null)}\n            printer={selected}\n            refresh={refresh}\n          />\n        )}\n      </Row>\n      <Row>\n        <Column grow>\n          <Button\n            text=\"Nuova stampante\"\n            icon={faPlus}\n            kind=\"success\"\n            onClick={createPrinter}\n          />\n        </Column>\n      </Row>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport Column from '../../../widgets/Column';\nimport Row from '../../../widgets/Row';\nimport LocationsConfigurationSection from './LocationsConfigurationSection';\nimport PrintersConfigurationSection from './PrintersConfigurationSection';\n\nexport default function PrintersConfigurationPage() {\n  return (\n    <Row grow spaced>\n      <Column grow>\n        <LocationsConfigurationSection />\n      </Column>\n      <Column grow>\n        <PrintersConfigurationSection />\n      </Column>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport Modal from '../../../widgets/Modal';\nimport TextEditor from '../../../inputs/TextEditor';\nimport Row from '../../../widgets/Row';\nimport Column from '../../../widgets/Column';\nimport useNetwork from '../../../utils/useNetwork';\nimport useRemote from '../../../utils/useRemote';\nimport Button from '../../../widgets/Button';\nimport ConfirmButton from '../../../widgets/ConfirmButton';\n\nexport default function TableEditor({\n  onClose,\n  table: tableUuid,\n  refresh: refreshAll\n}) {\n  const {\n    put,\n    remove\n  } = useNetwork();\n\n  const [table, refreshThis] = useRemote(`restaurant-tables/${tableUuid}`);\n\n  async function updateProperty(name, value) {\n    await put(`restaurant-tables/${tableUuid}/${name}`, { value });\n    refreshAll();\n    refreshThis();\n  }\n\n  async function deleteTable() {\n    const result = await remove(`restaurant-tables/${tableUuid}`);\n    if (result !== null) {\n      refreshAll();\n      onClose();\n    }\n  }\n\n  if (!table) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} visible>\n      <Column spaced grow>\n        <Row>\n          <Column grow>\n            <TextEditor\n              label=\"Nome\"\n              initialValue={table.name}\n              onConfirm={value => updateProperty('name', value)}\n            />\n          </Column>\n        </Row>\n        <Row spaced>\n          <Column grow>\n            <ConfirmButton\n              confirmMessage=\"Eliminare il tavolo?\"\n              text=\"Elimina\"\n              icon={faTrash}\n              kind=\"danger\"\n              onClick={deleteTable}\n            />\n          </Column>\n          <Column grow>\n            <Button text=\"Chiudi\" kind=\"info\" onClick={onClose}/>\n          </Column>\n        </Row>\n      </Column>\n    </Modal>\n  );\n}\n","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment, useState } from 'react';\nimport SelectInput from '../../../inputs/SelectInput';\nimport useNetwork from '../../../utils/useNetwork';\nimport useRemote from '../../../utils/useRemote';\nimport Column from '../../../widgets/Column';\nimport Row from '../../../widgets/Row';\nimport TableEditor from './TableEditor';\nimport Wrap from '../../../widgets/Wrap';\nimport Button from '../../../widgets/Button';\n\nexport default function TablesConfigurationPage() {\n  const { post } = useNetwork();\n\n  const [tables, refresh] = useRemote('restaurant-tables');\n\n  const [selected, setSelected] = useState(null);\n\n  async function createTable() {\n    const result = await post('restaurant-tables');\n    if (result != null) {\n      refresh();\n      setSelected(result);\n    }\n  }\n\n  return (\n    <Fragment>\n      <Row>\n        <Column grow>\n          <p className=\"h4 has-text-centered\">Tavoli</p>\n        </Column>\n      </Row>\n      <Row grow>\n        <Column grow>\n          <SelectInput\n            options={tables || []}\n            id={table => table.uuid}\n            text={table => table.name}\n            rows={5}\n            cols={5}\n            onSelectOption={table => setSelected(table.uuid)}\n          />\n        </Column>\n        {selected && (\n          <TableEditor\n            onClose={() => setSelected(null)}\n            table={selected}\n            refresh={refresh}\n          />\n        )}\n      </Row>\n      <Button\n        text=\"Nuovo tavolo\"\n        icon={faPlus}\n        kind=\"success\"\n        onClick={createTable}\n      />\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport Modal from '../../../widgets/Modal';\nimport TextEditor from '../../../inputs/TextEditor';\nimport Row from '../../../widgets/Row';\nimport Column from '../../../widgets/Column';\nimport useNetwork from '../../../utils/useNetwork';\nimport useRemote from '../../../utils/useRemote';\nimport Button from '../../../widgets/Button';\nimport ConfirmButton from '../../../widgets/ConfirmButton';\nimport RemoteSelectEditor from '../../../inputs/RemoteSelectEditor';\n\nexport default function WaiterEditor({\n  onClose,\n  waiter: waiterUuid,\n  refresh: refreshAll\n}) {\n  const {\n    put,\n    remove\n  } = useNetwork();\n\n  const [waiter, refreshThis] = useRemote(`waiters/${waiterUuid}`);\n\n  async function updateProperty(name, value) {\n    await put(`waiters/${waiterUuid}/${name}`, { value });\n    refreshAll();\n    refreshThis();\n  }\n\n  async function deleteWaiter() {\n    const result = await remove(`waiters/${waiterUuid}`);\n    if (result !== null) {\n      refreshAll();\n      onClose();\n    }\n  }\n\n  if (!waiter) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} visible>\n      <Column spaced>\n        <Row>\n          <Column grow>\n            <TextEditor\n              label=\"Nome\"\n              initialValue={waiter.name}\n              onConfirm={value => updateProperty('name', value)}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <TextEditor\n              label=\"Cognome\"\n              initialValue={waiter.surname}\n              onConfirm={value => updateProperty('surname', value)}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <TextEditor\n              label=\"Codice fiscale\"\n              initialValue={waiter.cf}\n              onConfirm={value => updateProperty('cf', value)}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <RemoteSelectEditor\n              url=\"waiter-statuses\"\n              label=\"Stato\"\n              value={waiter.status}\n              onSelectOption={value => updateProperty('status', value)}\n            />\n          </Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <ConfirmButton\n              confirmMessage=\"Eliminare il cameriere?\"\n              text=\"Elimina\"\n              icon={faTrash}\n              kind=\"danger\"\n              onClick={deleteWaiter}\n            />\n          </Column>\n          <Column grow>\n            <Button text=\"Chiudi\" kind=\"info\" onClick={onClose}/>\n          </Column>\n        </Row>\n      </Column>\n    </Modal>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Row from '../../../widgets/Row';\nimport Column from '../../../widgets/Column';\nimport useRemote from '../../../utils/useRemote';\nimport SelectInput from '../../../inputs/SelectInput';\nimport useNetwork from '../../../utils/useNetwork';\nimport WaiterEditor from './WaiterEditor';\nimport Button from '../../../widgets/Button';\nimport Wrap from '../../../widgets/Wrap';\n\nexport default function WaitersConfigurationPage() {\n  const { post } = useNetwork();\n\n  const [waiters, refresh] = useRemote('waiters');\n\n  const [selected, setSelected] = useState(null);\n\n  async function createWaiter() {\n    const result = await post('waiters');\n    if (result != null) {\n      refresh();\n      setSelected(result);\n    }\n  }\n\n  function statusColor(status) {\n    if (status === 'SUSPENDED') {\n      return 'warning';\n    } if (status === 'REMOVED') {\n      return 'danger';\n    }\n    return 'secondary';\n  }\n\n  return (\n    <Fragment>\n      <Row>\n        <Column grow>\n          <p className=\"h4 has-text-centered\">Camerieri</p>\n        </Column>\n      </Row>\n      <Row grow relative>\n        <Column grow>\n          <SelectInput\n            options={waiters || []}\n            id={w => w.uuid}\n            text={w => w.name}\n            bg={w => statusColor(w.status)}\n            rows={4}\n            cols={4}\n            onSelectOption={w => setSelected(w.uuid)}\n          />\n        </Column>\n        {selected && (\n        <WaiterEditor\n          onClose={() => setSelected(null)}\n          waiter={selected}\n          refresh={refresh}\n        />\n        )}\n      </Row>\n      <Wrap>\n        <Button\n          text=\"Nuovo cameriere\"\n          icon={faPlus}\n          kind=\"success\"\n          onClick={createWaiter}\n        />\n      </Wrap>\n    </Fragment>\n  );\n}\n","import { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\nimport Button from './Button';\nimport Column from './Column';\nimport Row from './Row';\n\nexport default function Editor({\n  initialData,\n  onOk,\n  onCancel,\n  children,\n}) {\n  return (\n    <Row grow>\n      <Column grow spaced>\n        <Row grow>\n          <Column grow>{children}</Column>\n        </Row>\n        <Row spaced>\n          <Column grow>\n            <Button kind=\"danger\" icon={faTimes} onClick={onCancel}/>\n          </Column>\n          <Column grow>\n            <Button\n              kind=\"success\"\n              icon={faCheck}\n              onClick={() => onOk(initialData)}\n            />\n          </Column>\n        </Row>\n      </Column>\n    </Row>\n  );\n}\n","import React from 'react';\nimport IntegerEditor from '../../../inputs/IntegerEditor';\nimport RemoteSelectEditor from '../../../inputs/RemoteSelectEditor';\nimport useEditor from '../../../utils/useEditor';\nimport Column from '../../../widgets/Column';\nimport Editor from '../../../widgets/Editor';\nimport Modal from '../../../widgets/Modal';\nimport Row from '../../../widgets/Row';\n\nexport default function DiningTableDataEditor({\n  onClose,\n  table: tableUuid,\n  refresh: refreshAll,\n}) {\n  const [table, setTable, confirm] = useEditor({\n    url: 'dining-tables',\n    uuid: tableUuid,\n    initialValue: {},\n  });\n\n  async function onOk() {\n    await confirm();\n    refreshAll();\n    onClose();\n  }\n\n  if (!table) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} visible>\n      <Editor onCancel={onClose} onOk={onOk}>\n        <Column grow spaced>\n          <Row>\n            <Column grow>\n              <IntegerEditor\n                label=\"Coperti\"\n                initialValue={table.coverCharges || 0}\n                onConfirm={(value) => {\n                  setTable({\n                    ...table,\n                    coverCharges: value\n                  });\n                }}\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column grow>\n              <RemoteSelectEditor\n                url=\"waiters/active\"\n                label=\"Cameriere\"\n                id={w => w.uuid}\n                text={w => w.name}\n                value={table.waiter}\n                onSelectOption={(value) => {\n                  setTable({\n                    ...table,\n                    waiter: value\n                  });\n                }}\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column grow>\n              <RemoteSelectEditor\n                url=\"restaurant-tables\"\n                label=\"Tavolo\"\n                rows={5}\n                cols={5}\n                id={t => t.uuid}\n                text={t => t.name}\n                bg={t => (t.busy ? 'danger' : 'secondary')}\n                value={table.table}\n                onSelectOption={(value) => {\n                  setTable({\n                    ...table,\n                    table: value\n                  });\n                }}\n              />\n            </Column>\n          </Row>\n        </Column>\n      </Editor>\n    </Modal>\n  );\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport useRemote from './useRemote';\nimport useNetwork from './useNetwork';\n\nexport default function useEditor({\n  url, uuid, initialValue,\n}) {\n  const { put, post } = useNetwork();\n\n  const [entity, setEntity] = useState(null);\n\n  const confirm = useCallback(async () => {\n    if (uuid) {\n      await put(`${url}/${uuid}`, entity);\n    } else {\n      await post(url, entity);\n    }\n  }, [entity, post, put, url, uuid]);\n\n  const [loadedEntity] = useRemote(`${url}/${uuid}`, {\n    auto: !!uuid,\n    default: initialValue,\n  });\n\n  useEffect(() => {\n    setEntity(loadedEntity);\n  }, [loadedEntity]);\n\n  return [entity, setEntity, confirm];\n}\n","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Stomp } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nimport FloatEditor from '../../inputs/FloatEditor';\nimport SelectInput from '../../inputs/SelectInput';\nimport useNetwork from '../../utils/useNetwork';\nimport useRemote from '../../utils/useRemote';\nimport { formatDiningTable, formatDiningTableBg } from '../../utils/Utils';\nimport Button from '../../widgets/Button';\nimport Column from '../../widgets/Column';\nimport Row from '../../widgets/Row';\nimport DiningTableDataEditor from './tables/DiningTableDataEditor';\n\nexport default function DiningTablesListPage({\n  navigate,\n  eveningDate,\n}) {\n  const [evening, refresh] = useRemote(`evenings?date=${eveningDate}`);\n\n  const [editing, setEditing] = useState(false);\n\n  const { put } = useNetwork();\n\n  const updateCoverCharge = async (value) => {\n    const result = await put(`evenings/${evening.uuid}/coverCharge`, value);\n    if (result !== null) {\n      refresh();\n    }\n  };\n\n  useEffect(() => {\n    const sock = new SockJS('/restaurant');\n    const client = Stomp.over(sock);\n    client.connect({}, () => client\n      .subscribe('/topic/dining-tables', () => refresh()));\n    return () => client.disconnect();\n  }, [refresh]);\n\n  if (!evening) {\n    return null;\n  }\n\n  const diningTables = evening.diningTables.filter(table => table.status !== 'ARCHIVED');\n\n  return (\n    <Column grow spaced>\n      <Row>\n        <Column>\n          <FloatEditor\n            label=\"Coperto\"\n            initialValue={evening && evening.coverCharge}\n            onConfirm={updateCoverCharge}\n            currency\n          />\n        </Column>\n      </Row>\n      <Row grow>\n        <Column grow>\n          <Row>\n            <Column grow>\n              <p className=\"h3 has-text-centered\">Elenco tavoli</p>\n            </Column>\n          </Row>\n          <Row grow>\n            <Column grow>\n              <SelectInput\n                rows={5}\n                cols={4}\n                options={diningTables}\n                id={dt => dt.uuid}\n                bg={formatDiningTableBg}\n                text={formatDiningTable}\n                onSelectOption={table => navigate(`${table.uuid}`)}\n              />\n            </Column>\n          </Row>\n        </Column>\n        {editing && (\n          <DiningTableDataEditor\n            onClose={() => setEditing(false)}\n            refresh={refresh}\n          />\n        )}\n      </Row>\n      <Row>\n        <Column grow>\n          <Button\n            kind=\"success\"\n            icon={faPlus}\n            text=\"Nuovo tavolo\"\n            onClick={() => setEditing(true)}\n          />\n        </Column>\n      </Row>\n    </Column>\n  );\n}\n","import React from 'react';\nimport Column from '../../widgets/Column';\nimport Row from '../../widgets/Row';\n\nexport default function ({ children }) {\n  return (\n    <Row topSpaced grow>\n      <Column grow>{children}</Column>\n    </Row>\n  );\n}\n","import React, { useState } from 'react';\nimport IntegerEditor from '../inputs/IntegerEditor';\nimport SelectEditor from '../inputs/SelectEditor';\nimport { distribute, isToday } from '../utils/Utils';\nimport Button from './Button';\nimport Column from './Column';\nimport Row from './Row';\n\nconst MONTHS = [\n  'Gennaio',\n  'Febbraio',\n  'Marzo',\n  'Aprile',\n  'Maggio',\n  'Giugno',\n  'Luglio',\n  'Agosto',\n  'Settembre',\n  'Ottobre',\n  'Novembre',\n  'Dicembre',\n];\n\nexport default function ({\n  initialDate,\n  onChange\n}) {\n  const [month, setMonth] = useState(initialDate.getMonth());\n  const [year, setYear] = useState(initialDate.getFullYear());\n\n  let current = new Date(year, month, 1);\n\n  while (current.getDay() !== 1) {\n    current.setDate(current.getDate() - 1);\n  }\n\n  const dates = [];\n\n  while (current.getMonth() !== month) {\n    dates.push(current);\n    current = new Date(current.getFullYear(), current.getMonth(), current.getDate() + 1);\n  }\n\n  while (current.getMonth() === month) {\n    dates.push(current);\n    current = new Date(current.getFullYear(), current.getMonth(), current.getDate() + 1);\n  }\n\n  while (current.getDay() !== 1) {\n    dates.push(current);\n    current = new Date(current.getFullYear(), current.getMonth(), current.getDate() + 1);\n  }\n\n  const rows = distribute(dates, 7);\n\n  return (\n    <Row>\n      <Column grow spaced>\n        <Column grow>\n          <SelectEditor\n            label=\"Mese\"\n            rows={4}\n            options={MONTHS.map((m, i) => i)}\n            text={m => MONTHS[m]}\n            value={month}\n            onSelectOption={setMonth}\n          />\n        </Column>\n        <Column grow>\n          <IntegerEditor\n            label=\"Anno\"\n            initialValue={year}\n            min={1999}\n            max={2100}\n            onConfirm={setYear}\n          />\n        </Column>\n        <Column grow spaced>\n          {rows.map(row => (\n            <Row spaced>\n              {row.map(d => (\n                <Column key={d.getTime()} grow grid>\n                  <Button\n                    active={isToday(d)}\n                    text={`${d.getDate()}/${d.getMonth() + 1}`}\n                    onClick={() => onChange(d)}\n                    kind={d.getMonth() === month && d.getFullYear() === year ? 'info' : 'white'}\n                  />\n                </Column>\n              ))}\n            </Row>\n          ))}\n        </Column>\n      </Column>\n    </Row>\n  );\n}\n","import moment from 'moment';\nimport React from 'react';\nimport Calendar from '../../widgets/Calendar';\n\nexport default function ({ navigate }) {\n  function selectEvening(date) {\n    navigate(`${moment(date).format('YYYY-MM-DD')}`);\n  }\n\n  return (\n    <Calendar initialDate={new Date()} onChange={d => selectEvening(d)} />\n  );\n}\n","\nexport default function EveningsPage({ children }) {\n  return children;\n}\n","import React, { useEffect } from 'react';\nimport useRemote from '../utils/useRemote';\nimport SelectInput from './SelectInput';\n\nexport default function RemoteSelectInput({\n  url, ...others\n}) {\n  const [data, refresh] = useRemote(url);\n\n  useEffect(() => { refresh(); }, [url, refresh]);\n\n  return (\n    <SelectInput options={data || []} {...others} />\n  );\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n    return null;\n  }, [delay]);\n}\n","import { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport $ from 'jquery';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { randomUuid } from '../utils/Utils';\nimport Button from './Button';\nimport Column from './Column';\nimport Row from './Row';\nimport useInterval from '../utils/useInterval';\n\nrequire('jquery-ui/ui/widgets/draggable');\n\nexport default function ({ children }) {\n  const [uuid] = useState(`scrollable_${randomUuid()}`);\n  const [percent, setPercent] = useState(0);\n  const [scrollbarNeeded, setScrollbarNeeded] = useState(false);\n\n  function adjustPercent(value) {\n    if (value < 0) {\n      return 0;\n    }\n    if (value > 1) {\n      return 1;\n    }\n    return value;\n  }\n\n  const updateScrollbar = useCallback(() => {\n    const height = $(`#${uuid}`)\n      .height();\n    const parentHeight = $(`#${uuid}`)\n      .parent()\n      .height();\n    setScrollbarNeeded(parentHeight < height);\n  }, [uuid]);\n\n  const updateComponents = useCallback(() => {\n    const height = $(`#${uuid}`)\n      .height();\n    const parentHeight = $(`#${uuid}`)\n      .parent()\n      .height();\n\n    const child = $(`#${uuid}`);\n    const dot = $(`#${uuid}-dot`);\n\n    if (scrollbarNeeded) {\n      child.css('top', `${percent * (parentHeight - height)}px`);\n      dot.css('top', `${percent * (dot.parent()\n        .height() - dot.height())}px`);\n    } else {\n      child.css('top', '0');\n    }\n  }, [percent, scrollbarNeeded, uuid]);\n\n  useEffect(() => {\n    updateScrollbar();\n  }, [updateScrollbar]);\n\n  useEffect(() => {\n    updateComponents();\n  }, [updateComponents]);\n\n  useInterval(updateScrollbar, 1000);\n  useInterval(updateComponents, 1000);\n\n  function moveUp() {\n    const height = $(`#${uuid}`)\n      .height();\n    const parentHeight = $(`#${uuid}`)\n      .parent()\n      .height();\n    setPercent(p => adjustPercent(p + 100 / (parentHeight - height)));\n  }\n\n  function moveDown() {\n    const height = $(`#${uuid}`)\n      .height();\n    const parentHeight = $(`#${uuid}`)\n      .parent()\n      .height();\n    setPercent(p => adjustPercent(p - 100 / (parentHeight - height)));\n  }\n\n  return (\n    <Row grow>\n      <Column grow>\n        <div className=\"scrollable-container\">\n          <div id={uuid} className=\"scrollable-content\">\n            {children}\n          </div>\n        </div>\n      </Column>\n      <Column>\n        <Button\n          icon={faAngleUp}\n          onClick={moveUp}\n          disabled={!scrollbarNeeded || percent === 0}\n        />\n        <Row grow relative>\n          {scrollbarNeeded && (\n            <div id={`${uuid}-dot`} className=\"scrollable-dot\"/>\n          )}\n        </Row>\n        <Button\n          icon={faAngleDown}\n          onClick={moveDown}\n          disabled={!scrollbarNeeded || percent === 1}\n        />\n      </Column>\n    </Row>\n  );\n}\n","import React from 'react';\nimport {\n  faCaretLeft,\n  faCaretRight,\n  faFastBackward,\n  faFastForward,\n  faStepBackward,\n  faStepForward,\n} from '@fortawesome/free-solid-svg-icons';\nimport Row from '../../../../../widgets/Row';\nimport Column from '../../../../../widgets/Column';\nimport Button from '../../../../../widgets/Button';\nimport Scrollable from '../../../../../widgets/Scrollable';\n\n\nexport default function SplitModule({\n  items,\n  f,\n  ff,\n  fff,\n  b,\n  bb,\n  bbb,\n  display,\n}) {\n  return (\n    <Row grow>\n      <Column grow>\n        <Row grow>\n          <Column grow>\n            <Scrollable>\n              {items.map(item => (\n                <Row justifyBetween grow>\n                  {(b || bb) && (\n                    <Column>\n                      <Row>\n                        <Column>\n                          <Button\n                            icon={faStepBackward}\n                            onClick={() => bb(item)}\n                          />\n                        </Column>\n                        <Column>\n                          <Button\n                            icon={faCaretLeft}\n                            onClick={() => b(item)}\n                          />\n                        </Column>\n                      </Row>\n                    </Column>\n                  )}\n                  <Column grow justifyCenter>\n                    {display(item)}\n                  </Column>\n                  {(f || ff) && (\n                    <Column>\n                      <Row>\n                        <Column>\n                          <Button\n                            icon={faCaretRight}\n                            onClick={() => f(item)}\n                          />\n                        </Column>\n                        <Column>\n                          <Button\n                            icon={faStepForward}\n                            onClick={() => ff(item)}\n                          />\n                        </Column>\n                      </Row>\n                    </Column>\n                  )}\n                </Row>\n              ))}\n            </Scrollable>\n          </Column>\n        </Row>\n        <Row>\n          {bbb && (\n            <Column>\n              <Button icon={faFastBackward} onClick={() => bbb()} />\n            </Column>\n          )}\n          {fff && (\n            <Column>\n              <Button icon={faFastForward} onClick={() => fff()} />\n            </Column>\n          )}\n        </Row>\n      </Column>\n    </Row>\n  );\n}\n","import numeral from 'numeral';\nimport React, { Fragment } from 'react';\nimport {\n  faCaretLeft,\n  faCaretRight,\n  faMinus,\n  faPlus,\n  faStepBackward, faStepForward,\n} from '@fortawesome/free-solid-svg-icons';\nimport { formatGroup } from '../../../../../utils/Utils';\nimport Column from '../../../../../widgets/Column';\nimport Row from '../../../../../widgets/Row';\nimport SplitModule from './SplitModule';\nimport Wrap from '../../../../../widgets/Wrap';\nimport Button from '../../../../../widgets/Button';\n\nexport default function BillSplitPage({\n  selectedCcs,\n  setSelectedCcs,\n  availableCcs,\n  availableOrders,\n  setAvailableOrders,\n  table,\n}) {\n  function editCoverCharges(n) {\n    setSelectedCcs(old => old + n);\n  }\n\n  function closeAll() {\n    setAvailableOrders(oldGroups => oldGroups.map(group => ({\n      ...group,\n      selected: group.quantity,\n    })));\n    setSelectedCcs(availableCcs);\n  }\n\n  async function openAll() {\n    setAvailableOrders(oldGroups => oldGroups.map(group => ({\n      ...group,\n      selected: 0,\n    })));\n    setSelectedCcs(0);\n  }\n\n  function editGroup(group, quantity) {\n    setAvailableOrders(oldOrders => oldOrders.map(g => ({\n      ...g,\n      selected: g.id === group.id ? g.selected + quantity : g.selected,\n    })));\n  }\n\n  function remainingTotal() {\n    return (availableCcs - selectedCcs) * table.coverCharge\n      + availableOrders\n        .map(group => (group.quantity - group.selected) * group.price)\n        .reduce((p1, p2) => p1 + p2, 0);\n  }\n\n  function selectedTotal() {\n    return selectedCcs * table.coverCharge\n      + availableOrders\n        .map(group => group.selected * group.price)\n        .reduce((p1, p2) => p1 + p2, 0);\n  }\n\n  return (\n    <Fragment>\n      <Row justifyBetween>\n        <Row justifyBetween>\n          <Column grow justifyCenter>\n            <p className=\"one-line\">{`COPERTI RIMASTI: ${availableCcs - selectedCcs}`}</p>\n          </Column>\n          {availableCcs - selectedCcs > 0 && (\n            <Column>\n              <Row>\n                <Column>\n                  <Button\n                    icon={faCaretRight}\n                    onClick={() => editCoverCharges(1)}\n                  />\n                </Column>\n                <Column>\n                  <Button\n                    icon={faStepForward}\n                    onClick={() => editCoverCharges(availableCcs)}\n                  />\n                </Column>\n              </Row>\n            </Column>\n          )}\n        </Row>\n        <Row justifyBetween>\n          {(selectedCcs > 0) && (\n            <Column>\n              <Row>\n                <Column>\n                  <Button\n                    icon={faStepBackward}\n                    onClick={() => editCoverCharges(-selectedCcs)}\n                  />\n                </Column>\n                <Column>\n                  <Button\n                    icon={faCaretLeft}\n                    onClick={() => editCoverCharges(-1)}\n                  />\n                </Column>\n              </Row>\n            </Column>\n          )}\n          <Column grow justifyCenter>\n            <p className=\"one-line\">{`COPERTI SELEZIONATI: ${selectedCcs}`}</p>\n          </Column>\n        </Row>\n      </Row>\n      <Row grow>\n        <Column grow>\n          <SplitModule\n            items={availableOrders\n              .map(group => ({\n                ...group,\n                quantity: group.quantity - group.selected,\n              }))\n              .filter(group => group.quantity > 0)}\n            display={group => (\n              <Row justifyBetween>\n                <div>\n                  {formatGroup(group)}\n                </div>\n                <div>\n                  {numeral(group.price * group.quantity)\n                    .format('$0.00')}\n                </div>\n              </Row>\n            )}\n            f={group => editGroup(group, 1)}\n            ff={group => editGroup(group, group.quantity - group.selected)}\n            fff={closeAll}\n          />\n          <Wrap>\n            {`TOTALE RIMANENTE: ${numeral(remainingTotal())\n              .format('$0.00')}`}\n          </Wrap>\n        </Column>\n        <Column grow>\n          <SplitModule\n            items={availableOrders\n              .map(group => ({\n                ...group,\n                quantity: group.selected,\n              }))\n              .filter(group => group.quantity > 0)}\n            display={group => (\n              <Row justifyBetween>\n                <div>\n                  {formatGroup(group)}\n                </div>\n                <div>\n                  {numeral(group.price * group.quantity)\n                    .format('$0.00')}\n                </div>\n              </Row>\n            )}\n            b={group => editGroup(group, -1)}\n            bb={group => editGroup(group, -group.selected)}\n            bbb={openAll}\n          />\n          <Wrap>\n            {`TOTALE CONTO: ${numeral(selectedTotal())\n              .format('$0.00')}`}\n          </Wrap>\n        </Column>\n      </Row>\n    </Fragment>\n  );\n}\n","import numeral from 'numeral';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport FloatEditor from '../../../../../inputs/FloatEditor';\nimport IntegerEditor from '../../../../../inputs/IntegerEditor';\nimport { formatGroup } from '../../../../../utils/Utils';\nimport Column from '../../../../../widgets/Column';\nimport Row from '../../../../../widgets/Row';\nimport Scrollable from '../../../../../widgets/Scrollable';\n\nexport default function BillReviewPage({\n  table,\n  selectedCcs,\n  finalTotal,\n  setFinalTotal,\n  availableOrders,\n}) {\n  const [bills, setBills] = useState(1);\n\n  async function updateBillsNumber(n) {\n    const newStringTotal = numeral(finalTotal / n)\n      .format('0.00');\n    const newTotal = numeral(newStringTotal)\n      .value() * n;\n    setFinalTotal(newTotal);\n    setBills(n);\n  }\n\n  const estimatedTotal = useCallback(() => table.coverCharge * selectedCcs\n    + availableOrders.map(group => group.selected * group.price)\n      .reduce((o1, o2) => o1 + o2, 0), [availableOrders, selectedCcs, table.coverCharge]);\n\n  useEffect(() => {\n    setFinalTotal(estimatedTotal());\n  }, [estimatedTotal, setFinalTotal]);\n\n  return (\n    <Row grow>\n      <Column grow>\n        <Row grow>\n          <Column grow>\n            <Row grow>\n              <Column grow>\n                <Scrollable>\n                  <Row grow>\n                    <Column grow>\n                      <Row justifyBetween>\n                        <div>\n                          {`${selectedCcs} COPERTI`}\n                        </div>\n                        <div>\n                          {numeral(selectedCcs * table.coverCharge)\n                            .format('$0.00')}\n                        </div>\n                      </Row>\n                    </Column>\n                  </Row>\n                  {availableOrders\n                    .filter(group => group.selected > 0)\n                    .map(group => ({\n                      ...group,\n                      quantity: group.selected,\n                    }))\n                    .map(grp => (\n                      <Row grow>\n                        <Column grow>\n                          <Row justifyBetween>\n                            <div>\n                              {formatGroup(grp)}\n                            </div>\n                            <div>\n                              {numeral(grp.quantity * grp.price)\n                                .format('$0.00')}\n                            </div>\n                          </Row>\n                        </Column>\n                      </Row>\n                    ))}\n                </Scrollable>\n              </Column>\n            </Row>\n            <Row>\n              <Column grow>\n                <Row justifyBetween>\n                  <div>\n                    TOTALE PROVVISORIO:\n                  </div>\n                  <div>\n                    {numeral(estimatedTotal())\n                      .format('$0.00')}\n                  </div>\n                </Row>\n              </Column>\n            </Row>\n            <Row>\n              <Column grow>\n                <Row justifyBetween>\n                  <div>\n                    TOTALE DEFINITIVO:\n                  </div>\n                  <div>\n                    {numeral(finalTotal)\n                      .format('$0.00')}\n                  </div>\n                </Row>\n              </Column>\n            </Row>\n          </Column>\n        </Row>\n      </Column>\n      <Column grow>\n        <Row>\n          <Column>\n            <Row>\n              <Column>\n                <IntegerEditor\n                  kind=\"info\"\n                  label=\"Numero di parti\"\n                  initialValue={bills}\n                  onConfirm={updateBillsNumber}\n                />\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <FloatEditor\n                  kind=\"info\"\n                  label={(bills > 1) ? 'Totale per parte' : 'Totale definitivo'}\n                  initialValue={finalTotal / bills}\n                  onConfirm={value => setFinalTotal(bills * value)}\n                  currency\n                />\n              </Column>\n            </Row>\n          </Column>\n        </Row>\n      </Column>\n    </Row>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport BillSplitPage from './BillSplitPage';\nimport BillReviewPage from './BillReviewPage';\nimport useNetwork from '../../../../../utils/useNetwork';\nimport OkCancelDialog from '../../../../../widgets/OkCancelDialog';\n\nexport default function BillEditor({\n  table, onClose, refresh,\n}) {\n  const { get, post } = useNetwork();\n\n  const [review, setReview] = useState(false);\n\n  const [selectedCcs, setSelectedCcs] = useState(0);\n  const [availableCcs, setAvailableCcs] = useState(0);\n  const [availableOrders, setAvailableOrders] = useState([]);\n\n  const [finalTotal, setFinalTotal] = useState(0);\n\n  useEffect(() => {\n    get(`bills/remaining/${table.uuid}`)\n      .then((remainingTable) => {\n        setAvailableCcs(remainingTable.coverCharges);\n        setAvailableOrders(remainingTable.orders.map((group, index) => ({\n          ...group,\n          id: index,\n          selected: 0,\n        })));\n      });\n  }, [get, table.uuid]);\n\n  async function onConfirm() {\n    if (!review) {\n      setReview(true);\n    } else {\n      await post(`bills?table=${table.uuid}`, {\n        ccs: selectedCcs,\n        orders: availableOrders\n          .map(group => group.orders.slice(0, group.selected)\n            .map(order => order.uuid))\n          .reduce((a1, a2) => a1.concat(a2), []),\n        total: finalTotal\n      });\n      await refresh();\n      onClose();\n    }\n  }\n\n  return (\n    <OkCancelDialog\n      cancelText=\"Annulla conto\"\n      onCancel={onClose}\n      okText=\"Conferma conto\"\n      onOk={onConfirm}\n      size=\"lg\"\n      visible\n    >\n      {!review && (\n        <BillSplitPage\n          table={table}\n          selectedCcs={selectedCcs}\n          availableCcs={availableCcs}\n          availableOrders={availableOrders}\n          setAvailableOrders={setAvailableOrders}\n          setSelectedCcs={setSelectedCcs}\n          setFinalTotal={setFinalTotal}\n        />\n      )}\n      {review && (\n        <BillReviewPage\n          table={table}\n          availableOrders={availableOrders}\n          selectedCcs={selectedCcs}\n          finalTotal={finalTotal}\n          setFinalTotal={setFinalTotal}\n          refresh={refresh}\n        />\n      )}\n    </OkCancelDialog>\n  );\n}\n","\nconst cloneDeep = require('lodash.clonedeep');\n\nexport function dishOrders(ordination, dishUuid) {\n  const result = [];\n  ordination.orders.forEach((phaseGroup, pIndex) => {\n    phaseGroup.orders.forEach((group, gIndex) => {\n      if (group.dish.uuid === dishUuid) {\n        result.push({\n          phase: phaseGroup.phase,\n          group,\n          phaseIndex: pIndex,\n          groupIndex: gIndex,\n        });\n      }\n    });\n  });\n  return result;\n}\n\nexport function tableOrdersTotal(table) {\n  let total = 0;\n  table.orders.forEach((group) => {\n    total += group.quantity * group.price;\n  });\n  return total;\n}\n\nexport function ordinationTotal(ordination) {\n  let total = 0;\n  ordination.orders.forEach((phaseGroup) => {\n    phaseGroup.orders.forEach((group) => {\n      total += group.quantity * group.price;\n    });\n  });\n  return total;\n}\n\nexport function clone(ordination) {\n  return cloneDeep(ordination);\n}\n","import React, { useState } from 'react';\nimport FloatEditor from '../../../../inputs/FloatEditor';\nimport IntegerEditor from '../../../../inputs/IntegerEditor';\nimport SelectInput from '../../../../inputs/SelectInput';\nimport TextEditor from '../../../../inputs/TextEditor';\nimport useRemote from '../../../../utils/useRemote';\nimport Column from '../../../../widgets/Column';\nimport OkCancelDialog from '../../../../widgets/OkCancelDialog';\nimport Row from '../../../../widgets/Row';\n\nexport default function ({\n  dish, onCancel, onOk,\n}) {\n  const [quantity, setQuantity] = useState(1);\n  const [price, setPrice] = useState(dish.price);\n  const [notes, setNotes] = useState(null);\n  const [additions, setAdditions] = useState([]);\n\n  function onSelectAddition(addition) {\n    setAdditions((old) => {\n      const index = old.indexOf(addition);\n      if (index !== -1) {\n        setPrice(p => p - addition.price);\n        return old.slice(0, index).concat(old.slice(index + 1, old.length));\n      }\n      setPrice(p => p + addition.price);\n      return old.concat([addition]);\n    });\n  }\n\n  let [availableAdditions] = useRemote(`additions?dish=${dish.uuid}`);\n  if (!availableAdditions) {\n    availableAdditions = [];\n  }\n\n  return (\n    <OkCancelDialog\n      size=\"md\"\n      visible\n      onCancel={onCancel}\n      onOk={() => onOk(quantity, price, additions, notes)}\n    >\n      <Row>\n        <Column grow>\n          <Row>\n            <Column grow>\n              <Row>\n                <Column grow>\n                  <p className=\"h6 has-text-centered\">{dish.name}</p>\n                </Column>\n              </Row>\n              <Row margin=\"medium\">\n                <Column grow>\n                  <TextEditor\n                    label=\"Variante libera\"\n                    initialValue={notes}\n                    onConfirm={setNotes}\n                  />\n                </Column>\n              </Row>\n              <Row margin=\"medium\">\n                <Column grow>\n                  <FloatEditor\n                    label=\"Prezzo\"\n                    initialValue={price}\n                    onConfirm={setPrice}\n                    currency\n                  />\n                </Column>\n                <Column grow>\n                  <IntegerEditor\n                    label=\"Quantità\"\n                    initialValue={quantity}\n                    onConfirm={setQuantity}\n                  />\n                </Column>\n              </Row>\n              <Row>\n                <Column grow>\n                  <SelectInput\n                    uuid=\"order_fixed_additions\"\n                    rows={5}\n                    cols={4}\n                    options={availableAdditions}\n                    text={addition => addition.name}\n                    id={a => a.uuid}\n                    value={additions}\n                    onSelectOption={onSelectAddition}\n                    multiSelect\n                    alwaysShowPages\n                  />\n                </Column>\n              </Row>\n            </Column>\n          </Row>\n        </Column>\n      </Row>\n    </OkCancelDialog>\n  );\n}\n","import { faEllipsisH, faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\nimport { dishOrders } from '../../../../utils/OrdinationUtils';\nimport Button from '../../../../widgets/Button';\nimport Column from '../../../../widgets/Column';\nimport Row from '../../../../widgets/Row';\nimport { formatGroup } from '../../../../utils/Utils';\n\nexport default function OrdinationDish({\n  ordination,\n  dish,\n  onSelect,\n  onCustomize,\n  onLess,\n  onMore,\n}) {\n  const dishes = dishOrders(ordination, dish.uuid);\n\n  return (\n    <div className=\"panel\">\n      <p className=\"panel-heading\">\n        <Row>\n          <Column grow>\n            {dish.name}\n          </Column>\n          <Column>\n            <Button icon={faPlus} onClick={() => onSelect(dish)}/>\n          </Column>\n          <Column>\n            <Button icon={faEllipsisH} onClick={() => onCustomize(dish)}/>\n          </Column>\n        </Row>\n      </p>\n      {dishes.length > 0\n      && dishes.map((item) => {\n        const text = `${item.phase.name}: x ${formatGroup(item.group, {\n          withQuantity: true,\n          withName: false\n        })}`;\n        return (\n          <div className=\"panel-block\">\n            <Column grow>\n              {text}\n            </Column>\n            <Column>\n              <Row>\n                <Column>\n                  <Button icon={faMinus} kind=\"danger\"\n                          onClick={() => onLess(item.phaseIndex, item.groupIndex)}/>\n                </Column>\n                <Column>\n                  <Button icon={faPlus} kind=\"success\"\n                          onClick={() => onMore(item.phaseIndex, item.groupIndex)}/>\n                </Column>\n              </Row>\n            </Column>\n          </div>\n        );\n      })\n      }\n    </div>\n  );\n}\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment, useState } from 'react';\nimport TextEditor from '../../../../inputs/TextEditor';\nimport useRemote from '../../../../utils/useRemote';\nimport Button from '../../../../widgets/Button';\nimport Column from '../../../../widgets/Column';\nimport Row from '../../../../widgets/Row';\nimport Scrollable from '../../../../widgets/Scrollable';\nimport OrdinationDish from './OrdinationDish';\n\nexport default function OrdinationDishes({\n  categoryUuid,\n  ordination,\n  onSelectDish,\n  ...others\n}) {\n  const [dishes] = useRemote(`dishes?category=${categoryUuid}`);\n\n  const [search, setSearch] = useState(null);\n\n  if (!dishes) {\n    return null;\n  }\n\n  const filteredDishes = dishes.filter(dish => !search || dish.name.toLowerCase()\n    .includes(search.toLowerCase()));\n\n  return (\n    <Fragment>\n      <Row>\n        <Column grow>\n          <TextEditor label=\"Search\" initialValue={search || ''} onConfirm={setSearch}/>\n        </Column>\n        <Column>\n          <Button icon={faTimes} kind=\"danger\" onClick={() => setSearch(null)}/>\n        </Column>\n      </Row>\n      <Scrollable>\n        <Row grow>\n          <Column grow>\n            {filteredDishes.map(dish => (\n              <OrdinationDish\n                ordination={ordination}\n                dish={dish}\n                onSelect={onSelectDish}\n                {...others}\n              />\n            ))}\n          </Column>\n        </Row>\n      </Scrollable>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useEffect } from 'react';\nimport RemoteSelectInput from '../../../../inputs/RemoteSelectInput';\nimport SelectEditor from '../../../../inputs/SelectEditor';\nimport useRemote from '../../../../utils/useRemote';\nimport Button from '../../../../widgets/Button';\nimport Column from '../../../../widgets/Column';\nimport Row from '../../../../widgets/Row';\nimport OrdinationDishes from './OrdinationDishes';\n\nexport default function ({\n  ordination,\n  category,\n  onSelectCategory,\n  phase,\n  onSelectPhase,\n  quantity,\n  onSelectQuantity,\n  onSelectDish,\n  ...others\n}) {\n  const [phases] = useRemote('phases');\n\n  useEffect(() => {\n    if (phases && !phase) {\n      onSelectPhase(phases[0]);\n    }\n  }, [onSelectPhase, phase, phases]);\n\n  return (\n    <Fragment>\n      <Row grow>\n        <Column grow>\n          <Row>\n            {category && (\n              <Column grow>\n                <Button\n                  text=\"Categorie\"\n                  active={!category}\n                  disabled={!category}\n                  onClick={() => onSelectCategory(null)}\n                />\n              </Column>\n            )}\n            <Column grow>\n              <SelectEditor\n                label=\"Portata\"\n                kind=\"info\"\n                rows={2}\n                cols={2}\n                options={phases}\n                id={p => p.uuid}\n                text={p => p.name}\n                value={phase}\n                onSelectOption={onSelectPhase}\n              />\n            </Column>\n          </Row>\n          <Row grow>\n            <Column grow>\n              <Row>\n                <Column grow>\n                  <Row>\n                    {!category && (\n                      <Column grow>\n                        <p className=\"h5 has-text-centered\">Categorie</p>\n                      </Column>\n                    )}\n                    {category && (\n                      <Column grow>\n                        <p className=\"h5 has-text-centered\">{category.name}</p>\n                      </Column>\n                    )}\n\n                  </Row>\n                </Column>\n              </Row>\n              <Row grow>\n                <Column grow>\n                  {!category ? (\n                    <RemoteSelectInput\n                      url=\"categories\"\n                      rows={6}\n                      cols={2}\n                      id={cat => cat.uuid}\n                      text={cat => cat.name}\n                      value={category}\n                      onSelectOption={onSelectCategory}\n                      onDeselect={() => {\n                      }}\n                      alwaysShowPages\n                    />\n                  ) : (\n                    <OrdinationDishes\n                      ordination={ordination}\n                      categoryUuid={category.uuid}\n                      onSelectDish={onSelectDish}\n                      {...others}\n                    />\n                  )}\n                </Column>\n              </Row>\n            </Column>\n          </Row>\n        </Column>\n      </Row>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\nimport { formatPrice } from '../../../../utils/Utils';\nimport Column from '../../../../widgets/Column';\nimport Row from '../../../../widgets/Row';\n\nfunction format(group) {\n  const components = [\n    group.quantity,\n    group.dish.name,\n    ...group.additions.map(a => a.name),\n  ];\n  if (group.notes) {\n    components.push(group.notes);\n  }\n  return components.join(' ');\n}\n\nexport default function ({ ordination }) {\n  if (!ordination) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {ordination.orders.map(phaseGroup => (\n        <Fragment key={phaseGroup.phase.name}>\n          <Row>\n            <Column grow>\n              <p className=\"h6\">\n                {phaseGroup.phase.name}\n              </p>\n              {phaseGroup.orders.map(group => (\n                <Row justifyBetween key={group.dish.name}>\n                  <div>\n                    {format(group)}\n                  </div>\n                  <div>\n                    {formatPrice(\n                      group.quantity * group.price,\n                    )}\n                  </div>\n                </Row>\n              ))}\n            </Column>\n          </Row>\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { clone } from '../../../../utils/OrdinationUtils';\nimport useNetwork from '../../../../utils/useNetwork';\nimport Column from '../../../../widgets/Column';\nimport OkCancelDialog from '../../../../widgets/OkCancelDialog';\nimport Row from '../../../../widgets/Row';\nimport AdvancedInsertingSection from './AdvancedInsertingSection';\nimport InsertingSection from './InsertingSection';\nimport OrdinationReview from './OrdinationReview';\n\nexport default function OrdinationEditor({\n  tableUuid, onCancel, onConfirm, initialOrdination = { orders: [] },\n}) {\n  const [ordination, setOrdination] = useState(initialOrdination);\n  const [selectedDish, setSelectedDish] = useState(null);\n\n  const [insertingCategory, setInsertingCategory] = useState(null);\n  const [insertingPhase, setInsertingPhase] = useState(null);\n\n  function match(g1, g2) {\n    return (\n      g1.dish.uuid === g2.dish.uuid\n      && g1.price === g2.price\n      && g1.additions.every(addition => g2.additions.find(a => a.uuid === addition.uuid) != null)\n      && g2.additions.every(addition => g1.additions.find(a => a.uuid === addition.uuid) != null)\n      && ((!g2.notes && !g1.notes) || g2.notes === g1.notes)\n    );\n  }\n\n  const { put, post } = useNetwork();\n\n  async function onOk() {\n    if (ordination.uuid) {\n      await put(`dining-tables/${tableUuid}/ordinations/${ordination.uuid}`, ordination);\n    } else {\n      await post(`dining-tables/${tableUuid}/ordinations`, ordination);\n    }\n    onConfirm();\n  }\n\n  function doAddGroup(targetOrdination, phase, group) {\n    let p = targetOrdination.orders.find(grp => grp.phase.uuid === phase.uuid);\n    if (!p) {\n      p = {\n        phase,\n        orders: [],\n      };\n      targetOrdination.orders.push(p);\n    }\n    const pI = targetOrdination.orders.indexOf(p);\n    let o = p.orders.find(grp => match(grp, group));\n    if (!o) {\n      o = group;\n      p.orders.push(o);\n    } else {\n      o.quantity += group.quantity;\n    }\n    const gI = p.orders.indexOf(o);\n\n    targetOrdination.orders.sort((o1, o2) => o1.phase.priority - o2.phase.priority);\n\n    return [pI, gI];\n  }\n\n  function addDish(dish, quantity, price, additions, notes) {\n    setOrdination((oldOrdination) => {\n      const newOrdination = clone(oldOrdination);\n      doAddGroup(newOrdination, insertingPhase, {\n        dish,\n        price,\n        quantity,\n        additions,\n        notes,\n      });\n      return newOrdination;\n    });\n    setSelectedDish(null);\n  }\n\n  function onLess(phaseIndex, groupIndex) {\n    setOrdination((oldOrdination) => {\n      const newOrdination = clone(oldOrdination);\n      const phases = newOrdination.orders;\n      const groups = phases[phaseIndex].orders;\n      const group = groups[groupIndex];\n      group.quantity -= 1;\n      if (group.quantity === 0) {\n        groups.splice(groupIndex, 1);\n        if (groups.length === 0) {\n          phases.splice(phaseIndex, 1);\n        }\n      }\n      return newOrdination;\n    });\n  }\n\n  function onMore(phaseIndex, groupIndex) {\n    setOrdination((oldOrdination) => {\n      const newOrdination = clone(oldOrdination);\n      const phases = newOrdination.orders;\n      const groups = phases[phaseIndex].orders;\n      const group = groups[groupIndex];\n      group.quantity += 1;\n      return newOrdination;\n    });\n  }\n\n  return (\n    <OkCancelDialog\n      size=\"lg\"\n      visible\n      onCancel={onCancel}\n      onOk={onOk}\n    >\n      <Row grow>\n        <Column grow>\n          <Row grow>\n            <Column grow>\n              <OrdinationReview ordination={ordination} />\n            </Column>\n          </Row>\n        </Column>\n        <Column grow>\n          <InsertingSection\n            ordination={ordination}\n            category={insertingCategory}\n            onSelectCategory={setInsertingCategory}\n            phase={insertingPhase}\n            onSelectPhase={setInsertingPhase}\n            onSelectDish={dish => addDish(dish, 1, dish.price, [], null)}\n            onCustomize={setSelectedDish}\n            onLess={onLess}\n            onMore={onMore}\n          />\n        </Column>\n      </Row>\n      {selectedDish && (\n        <AdvancedInsertingSection\n          dish={selectedDish}\n          onCancel={() => setSelectedDish(null)}\n          onOk={(qty, price, adds, notes) => addDish(selectedDish, qty, price, adds, notes)}\n        />\n      )}\n    </OkCancelDialog>\n  );\n}\n","const MODE = {\n  REVIEW: 0,\n  ORDINATIONS: 1,\n  BILLS: 2,\n};\n\nexport default MODE;\n","import React from 'react';\nimport Button from './Button';\nimport Column from './Column';\nimport Modal from './Modal';\nimport Row from './Row';\n\n\nexport default function Alert({\n  children,\n  size,\n  visible,\n  onClose,\n}) {\n  return (\n    <Modal visible={visible} onClose={onClose} size={size}>\n      <Column spaced grow>\n        <Row>\n          <Column grow>{children}</Column>\n        </Row>\n        <Row>\n          <Column grow>\n            <Button\n              kind=\"secondary\"\n              text=\"Chiudi\"\n              onClick={onClose}\n            />\n          </Column>\n        </Row>\n      </Column>\n    </Modal>\n  );\n}\n","import React, { useEffect } from 'react';\nimport FloatEditor from '../../../../../inputs/FloatEditor';\nimport useNetwork from '../../../../../utils/useNetwork';\nimport Column from '../../../../../widgets/Column';\nimport Row from '../../../../../widgets/Row';\n\n\nexport default function PriceFiller({ table, refresh, onDone }) {\n  const { put } = useNetwork();\n\n  async function updatePrice(order, price) {\n    await put(`orders/${order.uuid}/price`, price);\n    refresh();\n  }\n\n  useEffect(() => {\n    const zeroOrders = !!table.orders.find(o => o.price === 0);\n    if (!zeroOrders) {\n      onDone();\n    }\n  }, [onDone, table.orders]);\n\n  return (\n    <Row>\n      <Column>\n        <Row>\n          <Column>\n            <p className=\"h4\">Aggiorna il prezzo dei seguenti ordini</p>\n          </Column>\n        </Row>\n        {table.orders\n          .filter(o => o.price === 0)\n          .map(o => (\n            <Row>\n              <Column>\n                <FloatEditor\n                  label={o.dish.name}\n                  initialValue={o.price}\n                  currency\n                  onConfirm={value => updatePrice(o.orders[0], value)}\n                />\n              </Column>\n            </Row>\n          ))\n        }\n      </Column>\n    </Row>\n  );\n}\n","import React from 'react';\nimport Button from './Button';\nimport Column from './Column';\nimport Modal from './Modal';\nimport Row from './Row';\n\n\nexport default function OptionsDialog({\n  children,\n  options,\n  onSelectOption,\n  onCancel,\n  size,\n  visible,\n}) {\n  return (\n    <Modal visible={visible} onClose={onCancel} size={size}>\n      <Row grow>\n        <Column>{children}</Column>\n      </Row>\n      <Row spaced>\n        {options.map(opt => (\n          <Column key={opt.label} auto>\n            <Button\n              kind={opt.kind}\n              text={opt.label}\n              icon={opt.icon}\n              onClick={() => onSelectOption(opt)}\n            />\n          </Column>\n        ))}\n      </Row>\n    </Modal>\n  );\n}\n","import {\n  faArchive,\n  faCheck,\n  faDollarSign,\n  faFileExport,\n  faHandshake,\n  faPen,\n  faPlus,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport fileDownload from 'js-file-download';\nimport React, { Fragment, useState } from 'react';\nimport RemoteSelectInput from '../../../inputs/RemoteSelectInput';\nimport useNetwork from '../../../utils/useNetwork';\nimport { formatDiningTable, formatDiningTableBg } from '../../../utils/Utils';\nimport Button from '../../../widgets/Button';\nimport Column from '../../../widgets/Column';\nimport OkCancelDialog from '../../../widgets/OkCancelDialog';\nimport Row from '../../../widgets/Row';\nimport BillEditor from './bills/editor/BillEditor';\nimport DiningTableDataEditor from './DiningTableDataEditor';\nimport OrdinationEditor from './ordinations/OrdinationEditor';\nimport MODE from './mode';\nimport Alert from '../../../widgets/Alert';\nimport PriceFiller from './bills/editor/PriceFiller';\nimport OptionsDialog from '../../../widgets/OptionsDialog';\nimport IntegerInput from '../../../inputs/IntegerInput';\nimport FloatInput from '../../../inputs/FloatInput';\nimport { tableOrdersTotal } from '../../../utils/OrdinationUtils';\nimport IntegerEditor from '../../../inputs/IntegerEditor';\nimport FloatEditor from '../../../inputs/FloatEditor';\n\nexport default function DiningTableActions({\n  table,\n  refresh,\n  setMode,\n  navigate,\n}) {\n  const {\n    get,\n    post,\n    put,\n    remove,\n  } = useNetwork();\n\n  const [selectingParts, setSelectingParts] = useState(false);\n  const [selectedParts, setSelectedParts] = useState(0);\n  const [selectedPrice, setSelectedPrice] = useState(0);\n\n  const [choosingBill, setChoosingBill] = useState(false);\n  const [closing, setClosing] = useState(false);\n  const [archiving, setArchiving] = useState(false);\n  const [creating, setCreating] = useState(false);\n  const [merging, setMerging] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [creatingBill, setCreatingBill] = useState(false);\n  const [fixingPrices, setFixingPrices] = useState(false);\n\n  async function makeQuickBill() {\n    const zeroOrders = !!table.orders.find(o => o.price === 0);\n    if (zeroOrders) {\n      setFixingPrices(true);\n    } else {\n      const result = await post(`bills/quick?table=${table.uuid}`);\n      if (result !== null) {\n        await refresh();\n        setMode(MODE.BILLS);\n      }\n    }\n  }\n\n  async function makePartialBill() {\n    const zeroOrders = !!table.orders.find(o => o.price === 0);\n    if (zeroOrders) {\n      setFixingPrices(true);\n    } else {\n      const result = await post(`bills/partial?table=${table.uuid}&parts=${selectedParts}&price=${selectedPrice}`);\n      if (result !== null) {\n        setSelectingParts(false);\n        await refresh();\n        setMode(MODE.BILLS);\n      }\n    }\n  }\n\n  function createBill() {\n    const zeroOrders = !!table.orders.find(o => o.price === 0);\n    if (zeroOrders) {\n      setFixingPrices(true);\n    } else {\n      setCreatingBill(true);\n      setMode(MODE.BILLS);\n    }\n  }\n\n  function makeBill(option) {\n    setChoosingBill(false);\n    if (option && option.id === 'QUICK') {\n      makeQuickBill();\n    } else if (option && option.id === 'FULL') {\n      createBill();\n    } else if (option && option.id === 'PARTIAL') {\n      setSelectingParts(true);\n      setSelectedParts(0);\n      setSelectedPrice(0);\n    }\n  }\n\n  const [mergeDestination, setMergeDestination] = useState(null);\n\n  async function mergeTables() {\n    if (mergeDestination) {\n      const result = await post(`dining-tables/${table.uuid}/merge/${mergeDestination.uuid}`);\n      if (result !== null) {\n        setMerging(false);\n        navigate(`../${mergeDestination.uuid}`);\n      }\n    } else {\n      setMerging(false);\n    }\n  }\n\n  async function closeTable(opt) {\n    if (opt && opt.id === 'CLOSE') {\n      const result = await post(`dining-tables/${table.uuid}/lock`);\n      if (result !== null) {\n        navigate('..');\n      }\n    } else if (opt && opt.id === 'ARCHIVE') {\n      let result = await post(`dining-tables/${table.uuid}/lock`);\n      if (result != null) {\n        result = await put(`dining-tables/${table.uuid}/archive`);\n        if (result !== null) {\n          navigate('..');\n        }\n      }\n    } else {\n      setClosing(false);\n    }\n  }\n\n  async function archiveTable() {\n    const result = await put(`dining-tables/${table.uuid}/archive`);\n    if (result !== null) {\n      setArchiving(false);\n      navigate('..');\n    }\n  }\n\n  async function deleteTable() {\n    const result = await remove(`dining-tables/${table.uuid}`);\n    if (result !== null) {\n      navigate('..');\n    }\n  }\n\n  async function exportTable() {\n    const result = await get(`dining-tables/${table.uuid}/export`);\n    if (result !== null) {\n      fileDownload(JSON.stringify(result), `${table.uuid}.json`);\n    }\n  }\n\n  function chooseParts(val) {\n    if (val > 0) {\n      setSelectedParts(val);\n\n      const coverChargesPrice = table.coverCharges * table.coverCharge;\n      const total = tableOrdersTotal(table) + coverChargesPrice;\n\n      setSelectedPrice(parseFloat((total / val).toFixed(2)));\n    }\n  }\n\n  return (\n    <Fragment>\n      <Row grow>\n        <Column spaced>\n          <p className=\"h4 has-text-centered\">Azioni sul tavolo</p>\n          <Button\n            kind=\"success\"\n            icon={faPlus}\n            text=\"Nuova comanda\"\n            onClick={() => setCreating(true)}\n          />\n          <Button\n            text=\"Conto\"\n            kind=\"success\"\n            icon={faDollarSign}\n            onClick={() => setChoosingBill(true)}\n          />\n          <Button\n            text=\"Modifica dati\"\n            kind=\"info\"\n            icon={faPen}\n            onClick={() => setEditing(true)}\n          />\n          <Button\n            text=\"Esporta tavolo\"\n            kind=\"info\"\n            icon={faFileExport}\n            onClick={() => exportTable()}\n          />\n          <Button\n            text=\"Fondi tavolo\"\n            kind=\"warning\"\n            icon={faHandshake}\n            onClick={() => setMerging(true)}\n          />\n          <Button\n            text=\"Chiudi tavolo\"\n            kind=\"warning\"\n            icon={faCheck}\n            onClick={() => setClosing(true)}\n          />\n          <Button\n            text=\"Archivia tavolo\"\n            kind=\"warning\"\n            icon={faArchive}\n            onClick={() => setArchiving(true)}\n          />\n          <Button\n            text=\"Elimina tavolo\"\n            kind=\"danger\"\n            icon={faTrash}\n            onClick={() => deleteTable()}\n          />\n        </Column>\n      </Row>\n      {choosingBill && (\n        <OptionsDialog\n          visible\n          onSelectOption={makeBill}\n          options={[\n            {\n              id: 'ABORT',\n              label: 'Annulla',\n            },\n            {\n              id: 'QUICK',\n              label: 'Conto rapido N.F.',\n              kind: 'success',\n            },\n            {\n              id: 'FULL',\n              label: 'Conto parziale o diviso',\n              kind: 'success',\n            },\n            {\n              id: 'PARTIAL',\n              label: 'Prezzo fisso',\n              kind: 'success',\n            },\n          ]}\n        >\n          <p>Creazione conto</p>\n        </OptionsDialog>\n      )}\n      <OkCancelDialog\n        visible={selectingParts}\n        onCancel={() => setSelectingParts(false)}\n        onOk={() => makePartialBill()}\n      >\n        <Column margin=\"small\">\n          <IntegerEditor\n            label=\"Numero conti\"\n            initialValue={selectedParts}\n            onConfirm={(value) => {\n              chooseParts(value);\n            }}\n          />\n          <FloatEditor\n            label=\"Prezzo\"\n            initialValue={selectedPrice}\n            onConfirm={(value) => {\n              setSelectedPrice(value);\n            }}\n          />\n        </Column>\n      </OkCancelDialog>\n      {closing && (\n        <OptionsDialog\n          visible\n          onSelectOption={closeTable}\n          options={[{\n            id: 'ABORT',\n            kind: 'info',\n            label: 'Annulla',\n          }, {\n            id: 'CLOSE',\n            kind: 'warning',\n            label: 'Chiudi',\n          }, {\n            id: 'ARCHIVE',\n            kind: 'danger',\n            label: 'Chiudi e archivia',\n          }]}\n        >\n          <p>Chiudere il tavolo?</p>\n        </OptionsDialog>\n      )}\n      {archiving && (\n        <OkCancelDialog\n          visible\n          onOk={archiveTable}\n          onCancel={() => setArchiving(false)}\n        >\n          <p>Archiviare il tavolo?</p>\n        </OkCancelDialog>\n      )}\n      {merging && (\n        <OkCancelDialog\n          visible\n          onOk={mergeTables}\n          onCancel={() => setMerging(false)}\n        >\n          <RemoteSelectInput\n            url={`dining-tables/${table.uuid}/mergeTargets`}\n            id={dt => dt.uuid}\n            text={formatDiningTable}\n            bg={formatDiningTableBg}\n            onSelectOption={setMergeDestination}\n            value={mergeDestination}\n          />\n        </OkCancelDialog>\n      )}\n      {creating && (\n        <OrdinationEditor\n          tableUuid={table.uuid}\n          onConfirm={() => {\n            setCreating(false);\n            refresh();\n            setMode(MODE.ORDINATIONS);\n          }}\n          onCancel={() => setCreating(false)}\n        />\n      )}\n      {editing && (\n        <DiningTableDataEditor\n          onClose={() => setEditing(false)}\n          table={table.uuid}\n          refresh={refresh}\n        />\n      )}\n      {creatingBill && (\n        <BillEditor\n          table={table}\n          refresh={refresh}\n          onClose={() => setCreatingBill(false)}\n        />\n      )}\n      {fixingPrices && (\n        <Alert\n          onClose={() => setFixingPrices(false)}\n          visible={fixingPrices}\n          size=\"large\"\n        >\n          <PriceFiller table={table} refresh={refresh} onDone={() => setFixingPrices(false)} />\n        </Alert>\n      )}\n    </Fragment>\n  );\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { formatPrice, formatGroup } from '../utils/Utils';\n\nexport default function Group({ group }) {\n  return (\n    <div className={classNames(`has-text-${(group.dish && group.dish.color) || 'secondary'}`, {\n      'is-blink': group.price === 0,\n    })}\n    >\n      <div className=\"is-pulled-left\">\n        {`${formatGroup(group)}`}\n      </div>\n      <div className=\"is-pulled-right\">\n        {formatPrice(group.quantity * group.price)}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { tableOrdersTotal } from '../../../utils/OrdinationUtils';\nimport useRemote from '../../../utils/useRemote';\nimport { formatDiningTable, formatPrice } from '../../../utils/Utils';\nimport Column from '../../../widgets/Column';\nimport Group from '../../../widgets/Group';\nimport Row from '../../../widgets/Row';\nimport Scrollable from '../../../widgets/Scrollable';\nimport Wrap from '../../../widgets/Wrap';\n\nexport default function DiningTableReview({ table }) {\n  const [settings] = useRemote('settings');\n\n  if (!table || !settings) {\n    return null;\n  }\n\n  const coverChargesPrice = table.coverCharges * table.coverCharge;\n\n  const total = tableOrdersTotal(table) + coverChargesPrice;\n\n  return (\n    <Row grow>\n      <Column grow>\n        <p className=\"h4 has-text-centered\">{formatDiningTable(table)}</p>\n        <Column grow>\n          <Scrollable>\n            <Row>\n              <Column grow>\n                <Row justifyBetween spaced>\n                  <div>\n                    {`${table.coverCharges} ${\n                      table.coverCharges === 1 ? 'COPERTO' : 'COPERTI'\n                    }`}\n                  </div>\n                  <div>\n                    {formatPrice(coverChargesPrice)}\n                  </div>\n                </Row>\n                {table.orders.map(group => (\n                  <Group key={group.uuid} group={group}/>\n                ))}\n              </Column>\n            </Row>\n          </Scrollable>\n        </Column>\n        <Column>\n          <Row justifyBetween>\n            <span className=\"has-text-weight-bold\">TOTALE: </span>\n            <span>{formatPrice(total)}</span>\n          </Row>\n        </Column>\n      </Column>\n    </Row>\n  )\n    ;\n}\n","import {\n  faBars, faPen, faPrint, faTimes, faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment, useState } from 'react';\nimport useNetwork from '../../../../utils/useNetwork';\nimport useRemote from '../../../../utils/useRemote';\nimport { beautifyTime, formatDiningTable } from '../../../../utils/Utils';\nimport Alert from '../../../../widgets/Alert';\nimport Button from '../../../../widgets/Button';\nimport Column from '../../../../widgets/Column';\nimport ConfirmButton from '../../../../widgets/ConfirmButton';\nimport Row from '../../../../widgets/Row';\nimport Scrollable from '../../../../widgets/Scrollable';\nimport OrdinationEditor from './OrdinationEditor';\nimport OrdinationReview from './OrdinationReview';\n\nexport default function DiningTableOrdinations({\n  table,\n  refresh,\n}) {\n  const {\n    put,\n    post,\n    remove\n  } = useNetwork();\n\n  const [settings] = useRemote('settings');\n\n  const [selectedOrdination, setSelectedOrdination] = useState(null);\n  const [menuOrdination, setMenuOrdination] = useState(null);\n\n  async function printOrdination(ordination) {\n    const result = await post(\n      `dining-tables/${table.uuid}/ordinations/${ordination.uuid}/print`,\n    );\n    if (result !== null) {\n      refresh();\n      setMenuOrdination(null);\n    }\n  }\n\n  async function abortOrdination(ordination) {\n    const result = await put(\n      `dining-tables/${table.uuid}/ordinations/${ordination.uuid}/abort`,\n    );\n    if (result !== null) {\n      refresh();\n      setMenuOrdination(null);\n    }\n  }\n\n  async function deleteOrdination(ordination) {\n    const result = await remove(\n      `dining-tables/${table.uuid}/ordinations/${ordination.uuid}`,\n    );\n    if (result !== null) {\n      refresh();\n      setMenuOrdination(null);\n    }\n  }\n\n  if (!table || !settings) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <Row grow>\n        <Column grow>\n          <Row>\n            <Column grow>\n              <p className=\"h4 has-text-centered\">{formatDiningTable(table)}</p>\n            </Column>\n          </Row>\n          <Row grow>\n            <Column grow>\n              <Scrollable>\n                <Row>\n                  <Column grow>\n                    {settings.coverCharges\n                    && `${table.coverCharges} ${\n                      table.coverCharges === 1 ? 'COPERTO' : 'COPERTI'\n                    }`}\n                    {table.ordinations.map(ordination => (\n                      <Row key={ordination.uuid}>\n                        <Column grow>\n                          <div className=\"card\">\n                            <header className=\"card-header\">\n                              <p className=\"card-header-title h4\">\n                                {`Comanda delle ${beautifyTime(\n                                  ordination.creationTime,\n                                )}`}\n                              </p>\n                              <Row alignCenter>\n                                {ordination.dirty && (\n                                  <Column grow>\n                                    <Button\n                                      icon={faPrint}\n                                      large\n                                      kind=\"warning\"\n                                      onClick={() => printOrdination(ordination)}\n                                    />\n                                  </Column>\n                                )}\n                                <Column grow>\n                                  <Button\n                                    icon={faBars}\n                                    large\n                                    onClick={() => setMenuOrdination(ordination)}\n                                  />\n                                </Column>\n                                {menuOrdination === ordination && (\n                                  <Alert\n                                    onClose={() => setMenuOrdination(null)}\n                                    visible\n                                  >\n                                    <Column spaced>\n                                      <Row>\n                                        <Column grow>\n                                          <Button\n                                            text=\"Modifica comanda\"\n                                            icon={faPen}\n                                            onClick={() => {\n                                              setSelectedOrdination(ordination);\n                                              setMenuOrdination(null);\n                                            }}\n                                          />\n                                        </Column>\n                                      </Row>\n                                      <Row>\n                                        <Column grow>\n                                          <Button\n                                            text=\"Stampa comanda\"\n                                            icon={faPrint}\n                                            kind={\n                                              ordination.dirty\n                                                ? 'warning'\n                                                : 'secondary'\n                                            }\n                                            onClick={() => printOrdination(ordination)\n                                            }\n                                          />\n                                        </Column>\n                                      </Row>\n                                      <Row>\n                                        <Column grow>\n                                          <ConfirmButton\n                                            icon={faTimes}\n                                            text=\"Stampa annullamento\"\n                                            kind=\"danger\"\n                                            onClick={() => abortOrdination(ordination)\n                                            }\n                                            confirmMessage=\"Stampare annullamento comanda?\"\n                                          />\n                                        </Column>\n                                      </Row>\n                                      <Row>\n                                        <Column grow>\n                                          <ConfirmButton\n                                            icon={faTrash}\n                                            text=\"Elimina comanda\"\n                                            kind=\"danger\"\n                                            onClick={() => deleteOrdination(ordination)\n                                            }\n                                            confirmMessage=\"Eliminare la comanda?\"\n                                          />\n                                        </Column>\n                                      </Row>\n                                    </Column>\n                                  </Alert>\n                                )}\n                              </Row>\n                            </header>\n                            <div className=\"card-content\">\n                              <OrdinationReview ordination={ordination}/>\n                            </div>\n                          </div>\n                        </Column>\n                      </Row>\n                    ))}\n                  </Column>\n                </Row>\n              </Scrollable>\n              {selectedOrdination && (\n                <OrdinationEditor\n                  initialOrdination={selectedOrdination}\n                  tableUuid={table.uuid}\n                  onConfirm={() => {\n                    setSelectedOrdination(null);\n                    refresh();\n                  }}\n                  onCancel={() => setSelectedOrdination(null)}\n                />\n              )}\n            </Column>\n          </Row>\n        </Column>\n      </Row>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport Button from './Button';\nimport OptionsDialog from './OptionsDialog';\n\nexport default function OptionsButton({\n  message,\n  options,\n  ...others\n}) {\n  const [dialogVisible, setDialogVisible] = useState(false);\n\n  return (\n    <Fragment>\n      <Button\n        {...others}\n        onClick={() => setDialogVisible(true)}\n      />\n      {message && (\n        <OptionsDialog\n          options={options}\n          onSelectOption={(opt) => {\n            setDialogVisible(false);\n            opt.onClick();\n          }}\n          onCancel={() => setDialogVisible(false)}\n          visible={dialogVisible}\n        >\n          <p>{message}</p>\n        </OptionsDialog>\n      )}\n    </Fragment>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport Button from './Button';\nimport OkCancelDialog from './OkCancelDialog';\n\nexport default function YesNoButton({\n  message, yesText, noText, onYes, onNo, ...others\n}) {\n  const [dialogVisible, setDialogVisible] = useState(false);\n\n  return (\n    <Fragment>\n      <Button {...others} onClick={() => setDialogVisible(true)} />\n      {message && (\n        <OkCancelDialog\n          okText={yesText || 'Sì'}\n          cancelText={noText || 'No'}\n          onOk={() => {\n            setDialogVisible(false);\n            onYes();\n          }}\n          onCancel={() => {\n            setDialogVisible(false);\n            onNo();\n          }}\n          visible={dialogVisible}\n        >\n          <p>{message}</p>\n        </OkCancelDialog>\n      )}\n    </Fragment>\n  );\n}\n","import {\n  faBars,\n  faDollarSign,\n  faPrint,\n  faTimes,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\nimport numeral from 'numeral';\nimport React, { useState } from 'react';\nimport useNetwork from '../../../../utils/useNetwork';\nimport { formatPrice } from '../../../../utils/Utils';\nimport Alert from '../../../../widgets/Alert';\nimport Button from '../../../../widgets/Button';\nimport Column from '../../../../widgets/Column';\nimport Group from '../../../../widgets/Group';\nimport OptionsButton from '../../../../widgets/OptionsButton';\nimport Row from '../../../../widgets/Row';\nimport YesNoButton from '../../../../widgets/YesNoButton';\nimport RemoteSelectEditor from '../../../../inputs/RemoteSelectEditor';\n\nfunction formatBill(bill) {\n  const prog = numeral(bill.progressive)\n    .format('000');\n  if (!bill.printTime) {\n    return `Conto ${prog}`;\n  }\n  if (!bill.customer) {\n    return `Ricevuta ${prog}`;\n  }\n  return `Fattura ${prog}`;\n}\n\nexport default function DiningTableBill({\n  table,\n  bill,\n  refresh,\n}) {\n  const [menuBill, setMenuBill] = useState(null);\n\n  const {\n    post,\n    put,\n    remove,\n  } = useNetwork();\n\n  async function printPreBill(generic) {\n    const result = await post(\n      `bills/${bill.uuid}/soft-print?generic=${!!generic}`,\n    );\n    if (result !== null) {\n      refresh();\n      setMenuBill(null);\n    }\n  }\n\n  async function printBill(generic) {\n    const result = await post(`bills/${bill.uuid}/print?generic=${!!generic}`);\n    if (result !== null) {\n      refresh();\n      setMenuBill(null);\n    }\n  }\n\n  async function deleteBill() {\n    const result = await remove(`bills/${bill.uuid}`);\n    if (result !== null) {\n      refresh();\n      setMenuBill(null);\n    }\n  }\n\n  async function deleteBillAndOrders() {\n    const result = await remove(`bills/${bill.uuid}/deep`);\n    if (result !== null) {\n      refresh();\n      setMenuBill(null);\n    }\n  }\n\n  if (!bill) {\n    return null;\n  }\n\n  return (\n    <div className=\"card\">\n      <header className=\"card-header\">\n        <p className=\"card-header-title h4\">{formatBill(bill)}</p>\n        <Row alignCenter>\n          <Column>\n            <Button\n              icon={faBars}\n              large\n              onClick={() => setMenuBill(bill)}\n            />\n          </Column>\n          {menuBill && (\n            <Alert onClose={() => setMenuBill(null)} visible>\n              <Column spaced grow>\n                <YesNoButton\n                  text=\"Stampa pre-conto\"\n                  icon={faPrint}\n                  message=\"Stampare preconto generico?\"\n                  onYes={() => printPreBill(true)}\n                  onNo={() => printPreBill(false)}\n                />\n                <Row>\n                  <Column grow>\n                    <RemoteSelectEditor\n                      url=\"customers\"\n                      label=\"Cliente\"\n                      value={menuBill && menuBill.customer}\n                      id={c => c.uuid}\n                      text={c => `${c.name} ${c.surname}`}\n                      onSelectOption={async (value) => {\n                        const updatedBill = await put(\n                          `bills/${bill.uuid}/customer/${value.uuid}`,\n                        );\n                        refresh();\n                        setMenuBill(updatedBill);\n                      }}\n                    />\n                  </Column>\n                  <Column>\n                    <Button\n                      kind=\"danger\"\n                      icon={faTimes}\n                      onClick={async () => {\n                        const updatedBill = await remove(\n                          `bills/${bill.uuid}/customer`,\n                        );\n                        refresh();\n                        setMenuBill(updatedBill);\n                      }}\n                    />\n                  </Column>\n                </Row>\n                <YesNoButton\n                  icon={faDollarSign}\n                  text=\"Ricevuta/Fattura fisc.\"\n                  message=\"Stampare conto generico?\"\n                  onYes={() => printBill(true)}\n                  onNo={() => printBill(false)}\n                />\n                <OptionsButton\n                  text=\"Elimina conto\"\n                  icon={faTrash}\n                  kind=\"danger\"\n                  onClick={deleteBill}\n                  options={[\n                    {\n                      label: 'Elimina conto',\n                      kind: 'danger',\n                      onClick: deleteBill,\n                    }, {\n                      label: 'Elimina conto e ordini',\n                      kind: 'danger',\n                      onClick: deleteBillAndOrders,\n                    }, {\n                      label: 'Annulla',\n                      kind: 'secondary',\n                      onClick: () => setMenuBill(null),\n                    },\n                  ]}\n                  message=\"Eliminare il conto?\"\n                />\n              </Column>\n            </Alert>\n          )}\n        </Row>\n      </header>\n      <div className=\"card-content\">\n        <Row>\n          <Column grow>\n            <Row justifyBetween>\n              <div>\n                {`${bill.coverCharges} COPERTI`}\n              </div>\n              <div>\n                {formatPrice(bill.coverCharges * table.coverCharge)}\n              </div>\n            </Row>\n            {bill.orders.map(group => (\n              <Group group={group} />\n            ))}\n            <Row justifyBetween>\n              <div>\n                <b>TOTALE</b>\n              </div>\n              <div>\n                <b>{formatPrice(bill.total)}</b>\n              </div>\n            </Row>\n          </Column>\n        </Row>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { formatDiningTable } from '../../../../utils/Utils';\nimport Column from '../../../../widgets/Column';\nimport Row from '../../../../widgets/Row';\nimport Scrollable from '../../../../widgets/Scrollable';\nimport DiningTableBill from './DiningTableBill';\n\nexport default function DiningTableBills({\n  table,\n  refresh,\n}) {\n  if (!table) {\n    return null;\n  }\n\n  return (\n    <Row grow>\n      <Column grow>\n        <Row>\n          <Column grow>\n            <p className=\"h4 has-text-centered\">{formatDiningTable(table)}</p>\n          </Column>\n        </Row>\n        <Row grow>\n          <Column grow>\n            <Scrollable>\n              {table.bills.map(bill => (\n                <Row key={bill.uuid} bitSpaced>\n                  <Column grow>\n                    <DiningTableBill\n                      table={table}\n                      bill={bill}\n                      refresh={refresh}\n                    />\n                  </Column>\n                </Row>\n              ))}\n            </Scrollable>\n          </Column>\n        </Row>\n      </Column>\n    </Row>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport Column from '../../../widgets/Column';\nimport Row from '../../../widgets/Row';\nimport DiningTableActions from './DiningTableActions';\nimport useRemote from '../../../utils/useRemote';\nimport DiningTableReview from './DiningTableReview';\nimport DiningTableOrdinations from './ordinations/DiningTableOrdinations';\nimport DiningTableBills from './bills/DiningTableBills';\nimport MODE from './mode';\nimport AppContext from '../../../ApplicationContext';\n\nexport default function DiningTablePage({\n  tableUuid,\n  navigate\n}) {\n  const [table, refresh] = useRemote(`dining-tables/${tableUuid}`);\n\n  const {\n    mode,\n    setMode\n  } = useContext(AppContext);\n\n  useEffect(() => {\n    const sock = new SockJS('/restaurant');\n    const client = Stomp.over(sock);\n    client.connect({}, () => client\n      .subscribe(`/topic/dining-tables/${tableUuid}`, () => refresh()));\n    return () => client.disconnect();\n  }, [refresh, tableUuid]);\n\n  return table && (\n    <Row grow spaced>\n      <Column grow>\n        {mode === MODE.REVIEW && <DiningTableReview table={table}/>}\n        {mode === MODE.ORDINATIONS && <DiningTableOrdinations table={table} refresh={refresh}/>}\n        {mode === MODE.BILLS && <DiningTableBills table={table} refresh={refresh}/>}\n      </Column>\n      <Column>\n        <DiningTableActions\n          navigate={navigate}\n          setMode={setMode}\n          table={table}\n          refresh={refresh}\n        />\n      </Column>\n    </Row>\n  );\n}\n","import { faCalendar, faCogs, faPen } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\nimport screenfull from 'screenfull';\nimport { faBolt } from '@fortawesome/free-solid-svg-icons/faBolt';\nimport Column from '../../widgets/Column';\nimport RoundButton from '../../widgets/RoundButton';\nimport Row from '../../widgets/Row';\n\nexport default function ({ navigate }) {\n  return (\n    <Column grow>\n      <Row justifyAround>\n        <RoundButton\n          text=\"Serate\"\n          icon={faCalendar}\n          onClick={() => {\n            navigate('evenings');\n            screenfull.request();\n          }}\n          size=\"xxl\"\n          vertical\n          fill\n        />\n      </Row>\n      <Row grow justifyAround>\n        <RoundButton\n          text=\"Impostazioni\"\n          icon={faCogs}\n          onClick={() => navigate('settings')}\n          size=\"xl\"\n          vertical\n          fill\n        />\n        <RoundButton\n          text=\"Statistiche\"\n          icon={faBolt}\n          onClick={() => navigate('statistics')}\n          size=\"xl\"\n          vertical\n          fill\n        />\n        <RoundButton\n          text=\"Configurazione\"\n          icon={faPen}\n          onClick={() => navigate('configuration')}\n          size=\"xl\"\n          vertical\n          fill\n        />\n      </Row>\n    </Column>\n  );\n}\n","import React from 'react';\n\nexport default function () {\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-content\">\n        <progress className=\"progress is-large is-info\" max=\"100\" />\n      </div>\n    </div>\n  );\n}\n","import React, { Fragment } from 'react';\nimport useNetwork from '../../utils/useNetwork';\nimport useRemote from '../../utils/useRemote';\nimport Button from '../../widgets/Button';\nimport Column from '../../widgets/Column';\nimport Row from '../../widgets/Row';\n\nexport default function () {\n  const { get } = useNetwork();\n\n  async function feed() {\n    get('printers/fiscal/feed');\n  }\n\n  // async function cut() {\n  //   get('printers/fiscal/cut');\n  // }\n\n  async function open() {\n    get('printers/fiscal/open');\n  }\n\n  const [data] = useRemote('printers/fiscal/status');\n\n\n  if (!data) {\n    return <p>Loading</p>;\n  }\n\n  return (\n    <Fragment>\n      <Row>\n        <Column size=\"3\">\n          {data.map(entry => <p>{`${entry.key}: ${entry.value}`}</p>)}\n        </Column>\n        <Column size=\"1\">\n          <Row>\n            <Column>\n              <Button text=\"Feed\" onClick={feed} />\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <Button text=\"Apri cassetto\" onClick={open} />\n            </Column>\n          </Row>\n        </Column>\n      </Row>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Button from '../widgets/Button';\n\nexport default function DefaultNav({\n  navigate, label, children, location, uri,\n}) {\n  const current = location.pathname === uri;\n  return (\n    <Fragment>\n      <Button\n        text={label}\n        onClick={() => navigate('')}\n        disabled={current}\n        active={current}\n      />\n      {children}\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport useRemote from '../utils/useRemote';\nimport DefaultNav from './DefaultNav';\n\nexport default function CategoryNav({\n  categoryUuid, ...others\n}) {\n  const [category] = useRemote(`categories/${categoryUuid}`);\n\n  return <DefaultNav label={category && category.name} {...others} />;\n}\n","import React, { Fragment, useContext } from 'react';\nimport Button from '../widgets/Button';\nimport ButtonGroup from '../widgets/ButtonGroup';\nimport AppContext from '../ApplicationContext';\nimport MODE from '../pages/evenings/tables/mode';\n\nexport default function DiningTablePageNav({\n  children,\n}) {\n  const { mode, setMode } = useContext(AppContext);\n\n  return (\n    <Fragment>\n      <ButtonGroup>\n        <Button\n          text=\"Riepilogo\"\n          kind=\"info\"\n          onClick={() => setMode(MODE.REVIEW)}\n          active={mode === MODE.REVIEW}\n          disabled={mode === MODE.REVIEW}\n        />\n        <Button\n          text=\"Comande\"\n          kind=\"info\"\n          onClick={() => setMode(MODE.ORDINATIONS)}\n          active={mode === MODE.ORDINATIONS}\n          disabled={mode === MODE.ORDINATIONS}\n        />\n        <Button\n          text=\"Conti\"\n          kind=\"info\"\n          onClick={() => setMode(MODE.BILLS)}\n          active={mode === MODE.BILLS}\n          disabled={mode === MODE.BILLS}\n        />\n      </ButtonGroup>\n      {children}\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport useRemote from '../utils/useRemote';\nimport DefaultNav from './DefaultNav';\n\nexport default function DishNav({\n  dishUuid, ...others\n}) {\n  const [dish] = useRemote(`dishes/${dishUuid}`);\n\n  return <DefaultNav label={dish && dish.name} {...others} />;\n}\n","import React, { Fragment } from 'react';\nimport { beautifyDate } from '../utils/Utils';\nimport Button from '../widgets/Button';\n\nexport default function ({\n  navigate, children, location, uri, eveningDate,\n}) {\n  const current = location.pathname === uri;\n  return (\n    <Fragment>\n      <Button\n        text={`Serata ${beautifyDate(eveningDate)}`}\n        onClick={() => navigate('')}\n        disabled={current}\n        active={current}\n      />\n      {children}\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Button from '../widgets/Button';\n\nexport default function ({\n  navigate, children, location, uri,\n}) {\n  const current = location.pathname === uri;\n  return (\n    <Fragment>\n      <Button\n        text=\"Calendario\"\n        onClick={() => navigate('')}\n        disabled={current}\n        active={current}\n      />\n      {children}\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Button from '../widgets/Button';\n\nexport default function ({\n  children, navigate, location, uri,\n}) {\n  const current = location.pathname === uri;\n  return (\n    <Fragment>\n      <Button\n        text=\"Home\"\n        onClick={() => navigate('')}\n        disabled={current}\n        active={current}\n      />\n      {children}\n    </Fragment>\n  );\n}\n","import { Router } from '@reach/router';\nimport React from 'react';\nimport CategoryNav from '../navs/CategoryNav';\nimport DefaultNav from '../navs/DefaultNav';\nimport DiningTablePageNav from '../navs/DiningTablePageNav';\nimport DishNav from '../navs/DishNav';\nimport EveningPageNav from '../navs/EveningPageNav';\nimport EveningsPageNav from '../navs/EveningsPageNav';\nimport HomePageNav from '../navs/HomePageNav';\n\nexport default function NavContent() {\n  return (\n    <Router primary={false}>\n      <HomePageNav path=\"/\">\n        <DefaultNav path=\"statistics\" label=\"Statistiche\" />\n        <EveningsPageNav path=\"evenings\">\n          <EveningPageNav path=\":eveningDate\">\n            <DiningTablePageNav path=\":tableUuid/*\" />\n          </EveningPageNav>\n        </EveningsPageNav>\n        <DefaultNav path=\"configuration\" label=\"Configurazione\">\n          <DefaultNav path=\"tables\" label=\"Tavoli\" />\n          <DefaultNav path=\"printers\" label=\"Stampanti\" />\n          <DefaultNav path=\"waiters\" label=\"Camerieri\" />\n          <DefaultNav path=\"menu\" label=\"Menu\">\n            <CategoryNav path=\":categoryUuid\">\n              <DishNav path=\":dishUuid\" />\n            </CategoryNav>\n          </DefaultNav>\n          <DefaultNav path=\"additions\" label=\"Varianti\" />\n          <DefaultNav path=\"customers\" label=\"Clienti\" />\n        </DefaultNav>\n        <DefaultNav path=\"settings\" label=\"Impostazioni\" />\n      </HomePageNav>\n    </Router>\n  );\n}\n","import { faCompress, faExpand, faLockOpen } from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment, useContext, useState } from 'react';\nimport screenfull from 'screenfull';\nimport AppContext from '../ApplicationContext';\nimport TextInput from '../inputs/TextInput';\nimport useNetwork from '../utils/useNetwork';\nimport Alert from '../widgets/Alert';\nimport Button from '../widgets/Button';\nimport Column from '../widgets/Column';\nimport Loading from '../widgets/Loading';\nimport Modal from '../widgets/Modal';\nimport OkCancelDialog from '../widgets/OkCancelDialog';\nimport Row from '../widgets/Row';\nimport FiscalPrinter from './home/FiscalPrinter';\nimport NavContent from './NavContent';\n\nexport default function Main({\n  navigate,\n  children,\n  buttons,\n}) {\n  const { get } = useNetwork();\n  const data = useContext(AppContext);\n\n  const [showPrinterDialog, setShowPrinterDialog] = useState(false);\n\n  const [showCashPassword, setShowCashPassword] = useState(false);\n  const [cashPassword, setCashPassword] = useState('');\n\n  async function openCash() {\n    await get(`printers/fiscal/open?password=${cashPassword}`);\n    setCashPassword('');\n    setShowCashPassword(false);\n  }\n\n  return (\n    <Fragment>\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <NavContent />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <Button\n                  icon={faLockOpen}\n                  onClick={() => setShowCashPassword(true)}\n                />\n                <Button icon={faExpand} onClick={() => screenfull.request()} />\n                <Button icon={faCompress} onClick={() => screenfull.exit()} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <div className=\"container is-fluid\">\n        {data.loading && <Loading loading />}\n        {children}\n      </div>\n      {showCashPassword && (\n        <OkCancelDialog\n          onCancel={() => setShowCashPassword(false)}\n          onOk={openCash}\n          visible\n        >\n          <TextInput value={cashPassword} onChange={setCashPassword} password />\n        </OkCancelDialog>\n      )}\n      {showPrinterDialog && (\n        <Alert onClose={() => setShowPrinterDialog(false)} visible>\n          <FiscalPrinter />\n        </Alert>\n      )}\n      {data.error && (\n        <Modal visible>\n          <p className=\"h5 has-text-danger\">{data.error}</p>\n          <Row>\n            <Column>\n              <Button text=\"Chiudi\" onClick={data.clearError} />\n            </Column>\n          </Row>\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport Row from '../widgets/Row';\nimport Column from '../widgets/Column';\n\nexport default function () {\n  return (\n    <Row grow>\n      <Column hCenter vCenter>\n        <p className=\"h1\">Pagina non trovata</p>\n      </Column>\n    </Row>\n  );\n}\n","import React, { Fragment } from 'react';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport BooleanInput from '../../inputs/BooleanInput';\nimport RemoteSelectEditor from '../../inputs/RemoteSelectEditor';\nimport TextEditor from '../../inputs/TextEditor';\nimport useNetwork from '../../utils/useNetwork';\nimport useRemote from '../../utils/useRemote';\nimport Column from '../../widgets/Column';\nimport Row from '../../widgets/Row';\nimport Wrap from '../../widgets/Wrap';\nimport Button from '../../widgets/Button';\n\nexport default function BaseSettings() {\n  const [settings, refresh] = useRemote('settings');\n\n  const { put } = useNetwork();\n\n  let headers = [];\n  if (settings && settings.billHeader) {\n    headers = settings.billHeader.split('\\n');\n  }\n\n  async function updateSetting(name, value) {\n    await put(`settings/${name}`, value);\n    await refresh();\n  }\n\n  async function deleteHeader(index) {\n    const newHeaders = [...headers];\n    newHeaders.splice(index, 1);\n    await put('settings/billHeader', { value: newHeaders.join('\\n') });\n    await refresh();\n  }\n\n  async function updateHeader(index, value) {\n    const newHeaders = [...headers];\n    if (index >= newHeaders.length) {\n      newHeaders.push(value || ' ');\n    } else {\n      newHeaders[index] = value || ' ';\n    }\n    await put('settings/billHeader', { value: newHeaders.join('\\n') });\n    await refresh();\n  }\n\n  if (!settings) {\n    return null;\n  }\n\n  return (\n    <Column spaced>\n      <RemoteSelectEditor\n        url=\"printers\"\n        label=\"Stampante preconti\"\n        value={settings.mainPrinter}\n        id={v => v.uuid}\n        text={v => v.name}\n        onSelectOption={value => updateSetting('mainPrinter', value)}\n      />\n      <TextEditor\n        label=\"Password cassa\"\n        initialValue={settings.cashPassword}\n        onConfirm={value => updateSetting('cashPassword', { value })}\n        password\n      />\n      <BooleanInput\n        label=\"Sintetizza comande\"\n        value={settings.shrinkOrdinations}\n        onConfirm={value => updateSetting('shrink-ordination', { value })}\n      />\n      {headers.map((header, index) => (\n        <Row>\n          <Column>\n            <TextEditor\n              initialValue={header}\n              label={`Intestazione preconto ${index + 1}`}\n              onConfirm={value => updateHeader(index, value)}\n            />\n          </Column>\n          <Column auto>\n            <Button kind=\"danger\" icon={faTrash} onClick={() => deleteHeader(index)}/>\n          </Column>\n        </Row>\n      ))}\n      <TextEditor\n        initialValue=\"\"\n        label={`Intestazione preconto ${headers.length + 1}`}\n        onConfirm={value => updateHeader(headers.length, value)}\n      />\n    </Column>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport IntegerEditor from '../../inputs/IntegerEditor';\nimport TextEditor from '../../inputs/TextEditor';\nimport useNetwork from '../../utils/useNetwork';\nimport useRemote from '../../utils/useRemote';\nimport Column from '../../widgets/Column';\nimport Row from '../../widgets/Row';\nimport Button from '../../widgets/Button';\nimport FiscalPrinter from '../home/FiscalPrinter';\nimport Alert from '../../widgets/Alert';\n\nexport default function HydraSettings() {\n  const [settings, refresh] = useRemote('settings');\n\n  const {\n    put,\n    post\n  } = useNetwork();\n\n  const [printerModalVisible, setPrinterModalVisible] = useState(false);\n\n  async function updateSetting(name, value) {\n    await put(`settings/${name}`, value);\n    await refresh();\n  }\n\n  async function testPrint() {\n    await post('printers/fiscal/test-print');\n  }\n\n  if (!settings) {\n    return null;\n  }\n\n  return (\n    <Column spaced>\n      <Row spaced>\n        <Column grow grid>\n          <TextEditor\n            label=\"Indirizzo stampante\"\n            initialValue={settings.fiscalPrinterAddress}\n            onConfirm={value => updateSetting('fiscal-printer-address',\n              value)}\n          />\n        </Column>\n        <Column grow grid>\n          <IntegerEditor\n            label=\"Porta stampante\"\n            initialValue={settings.fiscalPrinterPort}\n            onConfirm={value => updateSetting('fiscal-printer-port', value)}\n          />\n        </Column>\n      </Row>\n      <Row spaced>\n        <Column grow grid>\n          <Button\n            text=\"Test stampa\"\n            onClick={testPrint}\n          />\n        </Column>\n        <Column grow grid>\n          <Button\n            text=\"Stato stampante\"\n            onClick={() => setPrinterModalVisible(true)}\n          />\n        </Column>\n        <Alert\n          onClose={() => setPrinterModalVisible(false)}\n          visible={printerModalVisible}\n          large\n        >\n          <FiscalPrinter/>\n        </Alert>\n      </Row>\n    </Column>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport BaseSettings from './BaseSettings';\nimport HydraSettings from './HydraSettings';\n\nexport default function SettingsPage() {\n  const [page, setPage] = useState('base');\n\n  return (\n    <Fragment>\n      <div className=\"tabs\">\n        <ul>\n          <li className={page === 'base' && 'is-active'}>\n            <a onClick={() => setPage('base')}>Impostazioni di base</a>\n          </li>\n          <li className={page === 'hydra' && 'is-active'}>\n            <a onClick={() => setPage('hydra')}>Stampante fiscale</a>\n          </li>\n        </ul>\n      </div>\n      {page === 'base' && <BaseSettings />}\n      {page === 'hydra' && <HydraSettings />}\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport * as moment from 'moment';\nimport IntegerEditor from '../inputs/IntegerEditor';\nimport SelectEditor from '../inputs/SelectEditor';\nimport Column from './Column';\nimport Row from './Row';\nimport { getMonths } from '../utils/Utils';\n\nexport default function DateInput({\n  label,\n  date,\n  onDateChange,\n}) {\n  const days = [];\n  for (let i = 0; i < date.daysInMonth(); i++) {\n    days.push(i + 1);\n  }\n\n  return (\n    <Row spaced alignCenter justifyCenter>\n      <Column grow grid>\n        <p className=\"has-text-right\">{label}</p>\n      </Column>\n      <Column grow grid>\n        <IntegerEditor\n          label=\"Anno\"\n          initialValue={date.year()}\n          min={1999}\n          max={2100}\n          onConfirm={value => onDateChange(moment(date)\n            .year(value))}\n        />\n      </Column>\n      <Column grow grid>\n        <SelectEditor\n          label=\"Mese\"\n          rows={4}\n          options={getMonths()\n            .map((m, i) => i)}\n          text={m => getMonths()[m]}\n          value={date.month()}\n          onSelectOption={value => onDateChange(moment(date)\n            .month(value))}\n        />\n      </Column>\n      <Column grow grid>\n        <SelectEditor\n          label=\"Giorno\"\n          rows={5}\n          cols={7}\n          options={days}\n          value={date.date()}\n          onSelectOption={value => onDateChange(moment(date)\n            .date(value))}\n        />\n      </Column>\n    </Row>\n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport * as moment from 'moment';\nimport { Legend, Pie, PieChart } from 'recharts';\nimport useRemote from '../../utils/useRemote';\nimport Row from '../../widgets/Row';\nimport Column from '../../widgets/Column';\nimport DateInput from '../../widgets/DateInput';\nimport SelectEditor from '../../inputs/SelectEditor';\nimport Button from '../../widgets/Button';\n\nconst Stats = [\n  {\n    label: 'Categorie più vendute',\n    resource: 'categories-profit',\n  },\n  {\n    label: 'Piatti più venduti',\n    resource: 'dishes-profit',\n  },\n];\n\nexport default function StatisticsPage() {\n  const [from, setFrom] = useState(moment()\n    .add(-1, 'months'));\n  const [to, setTo] = useState(moment());\n\n  const [option, setOption] = useState(Stats[0]);\n\n  const [stats, setStats] = useState({ entries: [] });\n\n  const [data, refresh] = useRemote(`statistics/${option.resource}/${from.format('YYYY-MM-DD')}/${to.format('YYYY-MM-DD')}`, {\n    auto: false,\n  });\n\n  const [, printCategories] = useRemote(`statistics/print/categories/${from.format('YYYY-MM-DD')}/${to.format('YYYY-MM-DD')}`, {\n    auto: false,\n  });\n\n  const [, printDishes] = useRemote(`statistics/print/dishes/${from.format('YYYY-MM-DD')}/${to.format('YYYY-MM-DD')}`, {\n    auto: false,\n  });\n\n  const randomColor = useCallback(() => `#${Math.floor(Math.random() * 16777215)\n    .toString(16)}`, []);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  useEffect(() => {\n    if (data) {\n      setStats({\n        ...data,\n        entries: data.entries.map(entry => ({\n          ...entry,\n          fill: randomColor(),\n        })),\n      });\n    }\n  }, [data, randomColor]);\n\n  return (\n    <Column grow>\n      <Row spaced>\n        <Column grow spaced>\n          <DateInput label=\"Da\" date={from} onDateChange={date => setFrom(date)} />\n          <DateInput label=\"A\" date={to} onDateChange={date => setTo(date)} />\n        </Column>\n        <Column grow>\n          <SelectEditor\n            label=\"Statistica\"\n            value={option}\n            id={opt => opt.resource}\n            text={opt => opt.label}\n            options={Stats}\n            onSelectOption={opt => setOption(opt)}\n          />\n          {data\n          && (\n            <p className=\"has-text-centered\">\n              <strong>\n                Totale:\n                {' '}\n                {data.entries.map(entry => entry.value)\n                  .reduce((a, b) => a + b, 0)}\n              </strong>\n            </p>\n          )}\n        </Column>\n        <Column grow>\n          <Button\n            text=\"Stampa\"\n            onClick={() => {\n              if (option === Stats[0]) {\n                printCategories();\n              } else {\n                printDishes();\n              }\n            }}\n          />\n        </Column>\n      </Row>\n      {stats\n      && (\n        <Row grow justifyCenter>\n          <PieChart width={500} height={400}>\n            <Pie\n              isAnimationActive={false}\n              nameKey=\"name\"\n              dataKey=\"value\"\n              data={stats.entries}\n              label={({\n                cx,\n                cy,\n                midAngle,\n                innerRadius,\n                outerRadius,\n                value,\n              }) => {\n                const RADIAN = Math.PI / 180;\n                // eslint-disable-next-line\n                const radius = 25 + innerRadius + (outerRadius - innerRadius);\n                // eslint-disable-next-line\n                const x = cx + radius * Math.cos(-midAngle * RADIAN);\n                // eslint-disable-next-line\n                const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n                return (\n                  <text\n                    x={x}\n                    y={y}\n                    fill=\"#000000\"\n                    textAnchor={x > cx ? 'start' : 'end'}\n                    dominantBaseline=\"central\"\n                  >\n                    {`${value}€`}\n                  </text>\n                );\n              }}\n            />\n            <Legend />\n          </PieChart>\n          <PieChart width={500} height={400}>\n            <Pie\n              isAnimationActive={false}\n              nameKey=\"name\"\n              dataKey=\"count\"\n              data={stats.entries}\n              label\n            />\n            <Legend />\n          </PieChart>\n        </Row>\n      )\n      }\n    </Column>\n  );\n}\n","import React from 'react';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport Modal from '../../../widgets/Modal';\nimport TextEditor from '../../../inputs/TextEditor';\nimport Row from '../../../widgets/Row';\nimport Column from '../../../widgets/Column';\nimport useNetwork from '../../../utils/useNetwork';\nimport useRemote from '../../../utils/useRemote';\nimport Button from '../../../widgets/Button';\nimport ConfirmButton from '../../../widgets/ConfirmButton';\n\nexport default function CustomerEditor({\n  onClose,\n  customer: customerUuid,\n  refresh: refreshAll,\n}) {\n  const {\n    put,\n    remove,\n  } = useNetwork();\n\n  const [customer, refreshThis] = useRemote(`customers/${customerUuid}`);\n\n  async function updateProperty(name, value) {\n    await put(`customers/${customerUuid}/${name}`, { value });\n    refreshAll();\n    refreshThis();\n  }\n\n  async function deleteCustomer() {\n    const result = await remove(`customers/${customerUuid}`);\n    if (result !== null) {\n      refreshAll();\n      onClose();\n    }\n  }\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} visible>\n      <Column spaced grow>\n        <Row>\n          <Column grow spaced>\n            <TextEditor\n              label=\"Nome\"\n              initialValue={customer.name}\n              onConfirm={value => updateProperty('name', value)}\n            />\n            <TextEditor\n              label=\"Cognome\"\n              initialValue={customer.surname}\n              onConfirm={value => updateProperty('surname', value)}\n            />\n            <TextEditor\n              label=\"Codice fiscale\"\n              initialValue={customer.cf}\n              onConfirm={value => updateProperty('cf', value)}\n            />\n            <TextEditor\n              label=\"Partita IVA\"\n              initialValue={customer.piva}\n              onConfirm={value => updateProperty('piva', value)}\n            />\n            <TextEditor\n              label=\"Città\"\n              initialValue={customer.city}\n              onConfirm={value => updateProperty('city', value)}\n            />\n            <TextEditor\n              label=\"CAP\"\n              initialValue={customer.cap}\n              onConfirm={value => updateProperty('cap', value)}\n            />\n            <TextEditor\n              label=\"Indirizzo\"\n              initialValue={customer.address}\n              onConfirm={value => updateProperty('address', value)}\n            />\n            <TextEditor\n              label=\"Paese\"\n              initialValue={customer.district}\n              onConfirm={value => updateProperty('district', value)}\n            />\n          </Column>\n        </Row>\n        <Row spaced>\n          <Column grow>\n            <ConfirmButton\n              confirmMessage=\"Eliminare il cliente?\"\n              text=\"Elimina\"\n              icon={faTrash}\n              kind=\"danger\"\n              onClick={deleteCustomer}\n            />\n          </Column>\n          <Column grow>\n            <Button text=\"Chiudi\" kind=\"info\" onClick={onClose} />\n          </Column>\n        </Row>\n      </Column>\n    </Modal>\n  );\n}\n","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport React, { Fragment, useState } from 'react';\nimport SelectInput from '../../../inputs/SelectInput';\nimport useNetwork from '../../../utils/useNetwork';\nimport useRemote from '../../../utils/useRemote';\nimport Column from '../../../widgets/Column';\nimport Row from '../../../widgets/Row';\nimport CustomerEditor from './CustomerEditor';\nimport Button from '../../../widgets/Button';\n\nexport default function CustomersConfigurationPage() {\n  const { post } = useNetwork();\n\n  const [customers, refresh] = useRemote('customers');\n\n  const [selected, setSelected] = useState(null);\n\n  async function createCustomer() {\n    const result = await post('customers');\n    if (result != null) {\n      refresh();\n      setSelected(result);\n    }\n  }\n\n  return (\n    <Fragment>\n      <Row>\n        <Column grow>\n          <p className=\"h4 has-text-centered\">Clienti</p>\n        </Column>\n      </Row>\n      <Row grow>\n        <Column grow>\n          <SelectInput\n            options={customers || []}\n            id={customer => customer.uuid}\n            text={customer => (`${customer.name} ${customer.surname}`)}\n            rows={5}\n            cols={5}\n            onSelectOption={customer => setSelected(customer.uuid)}\n          />\n        </Column>\n        {selected && (\n          <CustomerEditor\n            onClose={() => setSelected(null)}\n            customer={selected}\n            refresh={refresh}\n          />\n        )}\n      </Row>\n      <Button\n        text=\"Nuovo cliente\"\n        icon={faPlus}\n        kind=\"success\"\n        onClick={createCustomer}\n      />\n    </Fragment>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport numeral from 'numeral';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrequire('./index.scss');\n\n// load a locale\nnumeral.register('locale', 'it', {\n  delimiters: {\n    thousands: '\\'',\n    decimal: ',',\n  },\n  abbreviations: {\n    thousand: 'k',\n    million: 'm',\n    billion: 'b',\n    trillion: 't',\n  },\n  ordinal(number) {\n    return number === 1 ? 'st' : 'th';\n  },\n  currency: {\n    symbol: '€',\n  },\n});\n\n// switch between locales\nnumeral.locale('it');\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Router } from '@reach/router';\nimport React, { useCallback, useState } from 'react';\nimport AppContext from './ApplicationContext';\nimport AdditionsConfigurationPage from './pages/configuration/additions/AdditionsConfigurationPage';\nimport ConfigurationHomePage from './pages/configuration/ConfigurationHomePage';\nimport ConfigurationPage from './pages/configuration/ConfigurationPage';\nimport CategoriesConfigurationSection\n  from './pages/configuration/menu/CategoriesConfigurationSection';\nimport CategoryEditor from './pages/configuration/menu/CategoryEditor';\nimport MenuConfigurationPage from './pages/configuration/menu/MenuConfigurationPage';\nimport PrintersConfigurationPage from './pages/configuration/printers/PrintersConfigurationPage';\nimport TablesConfigurationPage from './pages/configuration/tables/TablesConfigurationPage';\nimport WaitersConfigurationPage from './pages/configuration/waiters/WaitersConfigurationPage';\nimport DiningTablesListPage from './pages/evenings/DiningTablesListPage';\nimport EveningPage from './pages/evenings/EveningPage';\nimport EveningSelectionPage from './pages/evenings/EveningSelectionPage';\nimport EveningsPage from './pages/evenings/EveningsPage';\nimport DiningTablePage from './pages/evenings/tables/DiningTablePage';\nimport HomePage from './pages/home/HomePage';\nimport Main from './pages/Main';\nimport NotFound from './pages/NotFound';\nimport SettingsPage from './pages/settings/SettingsPage';\nimport MODE from './pages/evenings/tables/mode';\nimport StatisticsPage from './pages/statistics/StatisticsPage';\nimport CustomersConfigurationPage from './pages/configuration/customers/CustomersConfigurationPage';\n\nexport default function App() {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(0);\n\n  const [diningTable, setDiningTable] = useState(null);\n  const [mode, setMode] = useState(MODE.REVIEW);\n\n  return (\n    <AppContext.Provider\n      value={{\n        error,\n        notifyError: useCallback(err => setError(err), []),\n        clearError: useCallback(() => setError(null), []),\n        loading: loading > 0,\n        startLoading: useCallback(() => setLoading(l => l + 1), []),\n        stopLoading: useCallback(() => setLoading(l => l - 1), []),\n        diningTable,\n        setDiningTable: useCallback(dt => setDiningTable(dt), []),\n        mode,\n        setMode: useCallback(m => setMode(m), []),\n      }}\n    >\n      <Router>\n        <Main path=\"/\">\n          <HomePage path=\"/\" />\n          <StatisticsPage path=\"statistics\" />\n          <EveningsPage path=\"evenings\">\n            <EveningSelectionPage path=\"/\" />\n            <EveningPage path=\":eveningDate\">\n              <DiningTablesListPage path=\"/\" />\n              <DiningTablePage path=\":tableUuid\" />\n            </EveningPage>\n          </EveningsPage>\n          <ConfigurationPage path=\"configuration\">\n            <ConfigurationHomePage path=\"/\" />\n            <PrintersConfigurationPage path=\"printers\" />\n            <WaitersConfigurationPage path=\"waiters\" />\n            <TablesConfigurationPage path=\"tables\" />\n            <MenuConfigurationPage path=\"menu\">\n              <CategoriesConfigurationSection path=\"/\" />\n              <CategoryEditor path=\":categoryUuid\" />\n            </MenuConfigurationPage>\n            <AdditionsConfigurationPage path=\"additions\" />\n            <CustomersConfigurationPage path=\"customers\" />\n          </ConfigurationPage>\n          <SettingsPage path=\"settings\" />\n        </Main>\n        <NotFound default />\n      </Router>\n    </AppContext.Provider>\n  );\n}\n"],"sourceRoot":""}